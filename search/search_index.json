{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Kotlin Android Architecture Library - Kaal - by eMan \u00b6 Usage \u00b6 All artifacts are available and distributed by using the jcenter() You should you artifact which you need. E.g. a domain artifact you will use in your domain layer, but you can use it also in data and infrastructure, because you need e.g. instance to the Result class. Kaal Core \u00b6 // Gradle Kotlin DSL implementation ( \"cz.eman.kaal:kaal-core:0.8.0\" ) implementation 'cz.eman.kaal:kaal-core:0.8.0' TBD Kaal Domain \u00b6 // Gradle Kotlin DSL implementation ( \"cz.eman.kaal:kaal-domain:0.8.0\" ) implementation 'cz.eman.kaal:kaal-domain:0.8.0' TBD Kaal Presentation \u00b6 // Gradle Kotlin DSL implementation ( \"cz.eman.kaal:kaal-presentation:0.8.0\" ) implementation 'cz.eman.kaal:kaal-presentation:0.8.0' TBD Kaal Infrastructure \u00b6 // Gradle Kotlin DSL implementation ( \"cz.eman.kaal:kaal-infrastructure:0.8.0\" ) implementation 'cz.eman.kaal:kaal-infrastructure:0.8.0' TBD Responsible Persons \u00b6 Vaclav Souhrada Roman Holomek Stefan Toth Filip \u0160m\u00edd","title":"Overview"},{"location":"#kotlin-android-architecture-library-kaal-by-eman","text":"","title":"Kotlin Android Architecture Library - Kaal - by eMan"},{"location":"#usage","text":"All artifacts are available and distributed by using the jcenter() You should you artifact which you need. E.g. a domain artifact you will use in your domain layer, but you can use it also in data and infrastructure, because you need e.g. instance to the Result class.","title":"Usage"},{"location":"#kaal-core","text":"// Gradle Kotlin DSL implementation ( \"cz.eman.kaal:kaal-core:0.8.0\" ) implementation 'cz.eman.kaal:kaal-core:0.8.0' TBD","title":"Kaal Core"},{"location":"#kaal-domain","text":"// Gradle Kotlin DSL implementation ( \"cz.eman.kaal:kaal-domain:0.8.0\" ) implementation 'cz.eman.kaal:kaal-domain:0.8.0' TBD","title":"Kaal Domain"},{"location":"#kaal-presentation","text":"// Gradle Kotlin DSL implementation ( \"cz.eman.kaal:kaal-presentation:0.8.0\" ) implementation 'cz.eman.kaal:kaal-presentation:0.8.0' TBD","title":"Kaal Presentation"},{"location":"#kaal-infrastructure","text":"// Gradle Kotlin DSL implementation ( \"cz.eman.kaal:kaal-infrastructure:0.8.0\" ) implementation 'cz.eman.kaal:kaal-infrastructure:0.8.0' TBD","title":"Kaal Infrastructure"},{"location":"#responsible-persons","text":"Vaclav Souhrada Roman Holomek Stefan Toth Filip \u0160m\u00edd","title":"Responsible Persons"},{"location":"changelog/","text":"Change Log \u00b6 0.8.0 (2020-10-02) \u00b6 Added \u00b6 equals , hashCode and toString implementation in anonymous ErrorCode and ErrorResult class BindingRecyclerViewAdapter to be used instead of classic adapters. bindRecyclerView databinding function that binds BindingRecyclerViewAdapter into RecyclerView. bindViewPager2 databinding function that binds BindingRecyclerViewAdapter into ViewPager2. ViewModel extension enabling to launch Coroutine on viewModelScope without writing the viewModelScope part. Changed \u00b6 Gradle updated to v6.4.1 Gradle build tools updated to v4.0.0 0.7.0 (2020-05-14) \u00b6 Added \u00b6 map functions call parameter could be now a suspend. This allow to us call suspendable functions inside of mappers. Changed \u00b6 Api Break: #13 - Base prefix has been replaced by a new Kaal prefix ( BaseFragment -> KaalFragment , ...) Kotlin Coroutines updated to v1.3.5 Kotlin updated to v1.3.72 Gradle updated to v6.2.2 0.6.0 (2020-01-27) \u00b6 Changed \u00b6 Kotlin Coroutines updated to v1.3.3 Retrofit updated to v2.7.1 Gradle updated to v6.1.1 Added \u00b6 :sparkles: The SingleLiveEvent (A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages.) is back :) New extension function ViewGroup.inflate to allows call like: viewGroup.inflate(R.layout.exchange_rates_view) Gradle updated to v6.1.1 Added \u00b6 :sparkles: The SingleLiveEvent (A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages.) is back :) New extension function ViewGroup.inflate to allows call like: viewGroup.inflate(R.layout.exchange_rates_view) Removed \u00b6 The Espresso has been removed from Kaal (not used) 0.5.0 (2019-12-03) \u00b6 Added \u00b6 :sparkles: #5 : You can define Fragment or Activity layout id by using a constructor class MainActivity : BaseActivity ( R . layout . activity_main ) // Fragment class MyFragment : BaseFragment ( R . layout . fragment_my ) Changed \u00b6 Koin updated to v1.3.61 Koin updated to v2.0.1 Gradle 5.6.4 Removed \u00b6 API Break: The ScopeAware has been removed. Since Koin 2.0.1 you should use official Scope API by Koin. 0.4.0 (2019-10-07) \u00b6 Changed \u00b6 Api Break: cz.eman.kaal.domain.Result and subclasses has been moved into cz.eman.kaal.domain.result.Result . This a new Result has a new functionality to remove boilerplate code. Also all classes which are using Result has been changed Dependencies update: Kotlin 1.3.50 Kotlin Coroutines 1.3.2 Espresso 3.0.2 Added \u00b6 Added a new function fun <Dto, T> callResult(responseCall: suspend () -> Response<Dto>, errorMessage: String? = null, map: (Dto) -> T): Result<T> to remove a boilerplate code when you're calling a server by using a retrofit. Old usage with callSafe override suspend fun getPopularMovies () = callSafe ( call = { fetchPopularMovies () }, errorMessage = \"Cannot fetch popular movies\" ) and old way to call remote API private suspend fun fetchPopularMovies (): Result < List < Movie >> { val response = movieApiService . getPopularMovies (). awaitResponse () return if ( response . isSuccessful ) { val body = response . body () if ( body != null ) { Result . Success ( data = MoviesMapper . mapWrapperToMovie ( body )) } else { Result . Error ( ApiErrorResult ( code = response . code (), errorMessage = response . message (), apiThrowable = EmptyBodyException () ) ) } } else { val errorResult = ApiErrorResult ( code = response . code (), errorMessage = response . message ()) logError { \"Cannot fetch popular movies[$errorResult]\" } Result . Error ( errorResult ) } } By using callResult you will remove boilerplate code above override suspend fun getPopularMovies () = callResult ( responseCall = { movieApiService . getPopularMovies ()} ) { MoviesMapper . mapWrapperToMovie ( it ) } You can also define your custom error message by a defining an attribute errorMessage : override suspend fun getPopularMovies () = callResult ( responseCall = { movieApiService . getPopularMovies ()}, errorMessage = \"Cannot get a popular movies!\" ) { MoviesMapper . mapWrapperToMovie ( it ) } - A new way how to create the Result.Error . There is a couple of standard functions but if you want to create ErrorResult without that you will define your own MyCustomErrorResult you can use this approach Result . error ( errorCode = MovieErrorCode . INVALID_USER_CREDENTIALS , message = \"Invalid username or password\" ) which is similar to code below Result . Error ( ErrorResult ( code = MovieErrorCode . INVALID_USER_CREDENTIALS , message = \"Invalid username or password\" ) ) - New HttpStatusErrorCode which define all HTTP error codes. You can use it by your own. In case of that you are using callSafe or callResult - response will be parsed automatically for you with these error codes 0.3.0 (2019-09-13) \u00b6 Added \u00b6 Added view extension functions ( hide(), show(), invisible(), hideKeyboard() Added a new view ext. function TextView.textWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on Added CalendarExtensions functions to avoid boilerplate code when you are working with the Calendar core : Added exhaustive helper to force a when statement to assert all options are matched in a when statement. when ( sealedObject ) { is OneType -> // is AnotherType -> // }. exhaustive 0.2.0 (2019-08-25) \u00b6 Added \u00b6 News in the cz.eman.kaal.domain.Result : New function getOrNull() which return data in case of that are available (from remote call or local call) , otherwise null is returned. and server request. Introducing a Fragment's Arguments: You can use this feature to easily create and handle a fragments arguments ```kotlin class PropertyDelegateFragment : Fragment() { private var userName by argument () private var email by argument () private var booksCount by argument () companion object { fun create(userName: String, email: String, booksCount: Int = 0) = PropertyDelegateFragment().apply { this.userName = userName this.email = email this.booksCount = booksCount } } override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? { return inflater.inflate(R.layout.fragment_arguments_demo, container, false) } override fun onActivityCreated(savedInstanceState: Bundle?) { super.onActivityCreated(savedInstanceState) nameTextView.text = userName emailTextView.text = email booksCountTextView.text = booksCount.toString() addBookButton.setOnClickListener { booksCount++ booksCountTextView.text = booksCount.toString() } } } ``` Changed \u00b6 The Result.Error has now output a generic parameter T Kotlin 1.3.40 Fixed \u00b6 Coroutines scope in a base classes 0.1.0 (2019-05-29) \u00b6 Initial version","title":"Changelog"},{"location":"changelog/#change-log","text":"","title":"Change Log"},{"location":"changelog/#080-2020-10-02","text":"","title":"0.8.0 (2020-10-02)"},{"location":"changelog/#added","text":"equals , hashCode and toString implementation in anonymous ErrorCode and ErrorResult class BindingRecyclerViewAdapter to be used instead of classic adapters. bindRecyclerView databinding function that binds BindingRecyclerViewAdapter into RecyclerView. bindViewPager2 databinding function that binds BindingRecyclerViewAdapter into ViewPager2. ViewModel extension enabling to launch Coroutine on viewModelScope without writing the viewModelScope part.","title":"Added"},{"location":"changelog/#changed","text":"Gradle updated to v6.4.1 Gradle build tools updated to v4.0.0","title":"Changed"},{"location":"changelog/#070-2020-05-14","text":"","title":"0.7.0 (2020-05-14)"},{"location":"changelog/#added_1","text":"map functions call parameter could be now a suspend. This allow to us call suspendable functions inside of mappers.","title":"Added"},{"location":"changelog/#changed_1","text":"Api Break: #13 - Base prefix has been replaced by a new Kaal prefix ( BaseFragment -> KaalFragment , ...) Kotlin Coroutines updated to v1.3.5 Kotlin updated to v1.3.72 Gradle updated to v6.2.2","title":"Changed"},{"location":"changelog/#060-2020-01-27","text":"","title":"0.6.0 (2020-01-27)"},{"location":"changelog/#changed_2","text":"Kotlin Coroutines updated to v1.3.3 Retrofit updated to v2.7.1 Gradle updated to v6.1.1","title":"Changed"},{"location":"changelog/#added_2","text":":sparkles: The SingleLiveEvent (A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages.) is back :) New extension function ViewGroup.inflate to allows call like: viewGroup.inflate(R.layout.exchange_rates_view) Gradle updated to v6.1.1","title":"Added"},{"location":"changelog/#added_3","text":":sparkles: The SingleLiveEvent (A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages.) is back :) New extension function ViewGroup.inflate to allows call like: viewGroup.inflate(R.layout.exchange_rates_view)","title":"Added"},{"location":"changelog/#removed","text":"The Espresso has been removed from Kaal (not used)","title":"Removed"},{"location":"changelog/#050-2019-12-03","text":"","title":"0.5.0 (2019-12-03)"},{"location":"changelog/#added_4","text":":sparkles: #5 : You can define Fragment or Activity layout id by using a constructor class MainActivity : BaseActivity ( R . layout . activity_main ) // Fragment class MyFragment : BaseFragment ( R . layout . fragment_my )","title":"Added"},{"location":"changelog/#changed_3","text":"Koin updated to v1.3.61 Koin updated to v2.0.1 Gradle 5.6.4","title":"Changed"},{"location":"changelog/#removed_1","text":"API Break: The ScopeAware has been removed. Since Koin 2.0.1 you should use official Scope API by Koin.","title":"Removed"},{"location":"changelog/#040-2019-10-07","text":"","title":"0.4.0 (2019-10-07)"},{"location":"changelog/#changed_4","text":"Api Break: cz.eman.kaal.domain.Result and subclasses has been moved into cz.eman.kaal.domain.result.Result . This a new Result has a new functionality to remove boilerplate code. Also all classes which are using Result has been changed Dependencies update: Kotlin 1.3.50 Kotlin Coroutines 1.3.2 Espresso 3.0.2","title":"Changed"},{"location":"changelog/#added_5","text":"Added a new function fun <Dto, T> callResult(responseCall: suspend () -> Response<Dto>, errorMessage: String? = null, map: (Dto) -> T): Result<T> to remove a boilerplate code when you're calling a server by using a retrofit. Old usage with callSafe override suspend fun getPopularMovies () = callSafe ( call = { fetchPopularMovies () }, errorMessage = \"Cannot fetch popular movies\" ) and old way to call remote API private suspend fun fetchPopularMovies (): Result < List < Movie >> { val response = movieApiService . getPopularMovies (). awaitResponse () return if ( response . isSuccessful ) { val body = response . body () if ( body != null ) { Result . Success ( data = MoviesMapper . mapWrapperToMovie ( body )) } else { Result . Error ( ApiErrorResult ( code = response . code (), errorMessage = response . message (), apiThrowable = EmptyBodyException () ) ) } } else { val errorResult = ApiErrorResult ( code = response . code (), errorMessage = response . message ()) logError { \"Cannot fetch popular movies[$errorResult]\" } Result . Error ( errorResult ) } } By using callResult you will remove boilerplate code above override suspend fun getPopularMovies () = callResult ( responseCall = { movieApiService . getPopularMovies ()} ) { MoviesMapper . mapWrapperToMovie ( it ) } You can also define your custom error message by a defining an attribute errorMessage : override suspend fun getPopularMovies () = callResult ( responseCall = { movieApiService . getPopularMovies ()}, errorMessage = \"Cannot get a popular movies!\" ) { MoviesMapper . mapWrapperToMovie ( it ) } - A new way how to create the Result.Error . There is a couple of standard functions but if you want to create ErrorResult without that you will define your own MyCustomErrorResult you can use this approach Result . error ( errorCode = MovieErrorCode . INVALID_USER_CREDENTIALS , message = \"Invalid username or password\" ) which is similar to code below Result . Error ( ErrorResult ( code = MovieErrorCode . INVALID_USER_CREDENTIALS , message = \"Invalid username or password\" ) ) - New HttpStatusErrorCode which define all HTTP error codes. You can use it by your own. In case of that you are using callSafe or callResult - response will be parsed automatically for you with these error codes","title":"Added"},{"location":"changelog/#030-2019-09-13","text":"","title":"0.3.0 (2019-09-13)"},{"location":"changelog/#added_6","text":"Added view extension functions ( hide(), show(), invisible(), hideKeyboard() Added a new view ext. function TextView.textWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on Added CalendarExtensions functions to avoid boilerplate code when you are working with the Calendar core : Added exhaustive helper to force a when statement to assert all options are matched in a when statement. when ( sealedObject ) { is OneType -> // is AnotherType -> // }. exhaustive","title":"Added"},{"location":"changelog/#020-2019-08-25","text":"","title":"0.2.0 (2019-08-25)"},{"location":"changelog/#added_7","text":"News in the cz.eman.kaal.domain.Result : New function getOrNull() which return data in case of that are available (from remote call or local call) , otherwise null is returned. and server request. Introducing a Fragment's Arguments: You can use this feature to easily create and handle a fragments arguments ```kotlin class PropertyDelegateFragment : Fragment() { private var userName by argument () private var email by argument () private var booksCount by argument () companion object { fun create(userName: String, email: String, booksCount: Int = 0) = PropertyDelegateFragment().apply { this.userName = userName this.email = email this.booksCount = booksCount } } override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? { return inflater.inflate(R.layout.fragment_arguments_demo, container, false) } override fun onActivityCreated(savedInstanceState: Bundle?) { super.onActivityCreated(savedInstanceState) nameTextView.text = userName emailTextView.text = email booksCountTextView.text = booksCount.toString() addBookButton.setOnClickListener { booksCount++ booksCountTextView.text = booksCount.toString() } } } ```","title":"Added"},{"location":"changelog/#changed_5","text":"The Result.Error has now output a generic parameter T Kotlin 1.3.40","title":"Changed"},{"location":"changelog/#fixed","text":"Coroutines scope in a base classes","title":"Fixed"},{"location":"changelog/#010-2019-05-29","text":"Initial version","title":"0.1.0 (2019-05-29)"},{"location":"api/core/","text":"core Packages \u00b6 Name Summary cz.eman.kaal.core.util Index \u00b6 All Types","title":"core"},{"location":"api/core/#packages","text":"Name Summary cz.eman.kaal.core.util","title":"Packages"},{"location":"api/core/#index","text":"All Types","title":"Index"},{"location":"api/core/alltypes/","text":"All Types \u00b6 Name Summary (extensions in package cz.eman.kaal.core.util) java.util.Calendar \u00b6 | (extensions in package cz.eman.kaal.core.util) kotlin.Long \u00b6","title":"Index"},{"location":"api/core/alltypes/#all-types","text":"Name Summary (extensions in package cz.eman.kaal.core.util)","title":"All Types"},{"location":"api/core/alltypes/#javautilcalendar","text":"| (extensions in package cz.eman.kaal.core.util)","title":"java.util.Calendar"},{"location":"api/core/alltypes/#kotlinlong","text":"","title":"kotlin.Long"},{"location":"api/core/cz.eman.kaal.core.util/","text":"core / cz.eman.kaal.core.util Package cz.eman.kaal.core.util \u00b6 Extensions for External Classes \u00b6 Name Summary java.util.Calendar kotlin.Long Properties \u00b6 Name Summary exhaustive Note: This helper is taken from the Plaid val <T> T.exhaustive: T","title":"Index"},{"location":"api/core/cz.eman.kaal.core.util/#package-czemankaalcoreutil","text":"","title":"Package cz.eman.kaal.core.util"},{"location":"api/core/cz.eman.kaal.core.util/#extensions-for-external-classes","text":"Name Summary java.util.Calendar kotlin.Long","title":"Extensions for External Classes"},{"location":"api/core/cz.eman.kaal.core.util/#properties","text":"Name Summary exhaustive Note: This helper is taken from the Plaid val <T> T.exhaustive: T","title":"Properties"},{"location":"api/core/cz.eman.kaal.core.util/exhaustive/","text":"core / cz.eman.kaal.core.util / exhaustive exhaustive \u00b6 val <T> T.exhaustive: T Note: This helper is taken from the Plaid Helper to force a when statement to assert all options are matched in a when statement. By default, Kotlin doesn't care if all branches are handled in a when statement. However, if you use the when statement as an expression (with a value) it will force all cases to be handled. This helper is to make a lightweight way to say you meant to match all of them. Usage: when(sealedObject) { is OneType -> // is AnotherType -> // }.exhaustive Since 0.3.0","title":"Exhaustive"},{"location":"api/core/cz.eman.kaal.core.util/exhaustive/#exhaustive","text":"val <T> T.exhaustive: T Note: This helper is taken from the Plaid Helper to force a when statement to assert all options are matched in a when statement. By default, Kotlin doesn't care if all branches are handled in a when statement. However, if you use the when statement as an expression (with a value) it will force all cases to be handled. This helper is to make a lightweight way to say you meant to match all of them. Usage: when(sealedObject) { is OneType -> // is AnotherType -> // }.exhaustive Since 0.3.0","title":"exhaustive"},{"location":"api/core/cz.eman.kaal.core.util/java.util.-calendar/","text":"core / cz.eman.kaal.core.util / java.util.Calendar Extensions for java.util.Calendar \u00b6 Name Summary cloneCalendar fun Calendar .cloneCalendar(): Calendar dayOfMonth val Calendar .dayOfMonth: Int dayOfYear val Calendar .dayOfYear: Int isDayGreaterThan fun Calendar .isDayGreaterThan(calendar: Calendar ): Boolean isDayLessThan fun Calendar .isDayLessThan(calendar: Calendar ): Boolean isSameDay fun Calendar .isSameDay(calendar: Calendar ): Boolean month val Calendar .month: Int normalize fun Calendar .normalize(): Calendar year val Calendar .year: Int","title":"Index"},{"location":"api/core/cz.eman.kaal.core.util/java.util.-calendar/#extensions-for-javautilcalendar","text":"Name Summary cloneCalendar fun Calendar .cloneCalendar(): Calendar dayOfMonth val Calendar .dayOfMonth: Int dayOfYear val Calendar .dayOfYear: Int isDayGreaterThan fun Calendar .isDayGreaterThan(calendar: Calendar ): Boolean isDayLessThan fun Calendar .isDayLessThan(calendar: Calendar ): Boolean isSameDay fun Calendar .isSameDay(calendar: Calendar ): Boolean month val Calendar .month: Int normalize fun Calendar .normalize(): Calendar year val Calendar .year: Int","title":"Extensions for java.util.Calendar"},{"location":"api/core/cz.eman.kaal.core.util/java.util.-calendar/clone-calendar/","text":"core / cz.eman.kaal.core.util / java.util.Calendar / cloneCalendar cloneCalendar \u00b6 fun Calendar .cloneCalendar(): Calendar Since 0.3.0","title":"Clone calendar"},{"location":"api/core/cz.eman.kaal.core.util/java.util.-calendar/clone-calendar/#clonecalendar","text":"fun Calendar .cloneCalendar(): Calendar Since 0.3.0","title":"cloneCalendar"},{"location":"api/core/cz.eman.kaal.core.util/java.util.-calendar/day-of-month/","text":"core / cz.eman.kaal.core.util / java.util.Calendar / dayOfMonth dayOfMonth \u00b6 val Calendar .dayOfMonth: Int","title":"Day of month"},{"location":"api/core/cz.eman.kaal.core.util/java.util.-calendar/day-of-month/#dayofmonth","text":"val Calendar .dayOfMonth: Int","title":"dayOfMonth"},{"location":"api/core/cz.eman.kaal.core.util/java.util.-calendar/day-of-year/","text":"core / cz.eman.kaal.core.util / java.util.Calendar / dayOfYear dayOfYear \u00b6 val Calendar .dayOfYear: Int","title":"Day of year"},{"location":"api/core/cz.eman.kaal.core.util/java.util.-calendar/day-of-year/#dayofyear","text":"val Calendar .dayOfYear: Int","title":"dayOfYear"},{"location":"api/core/cz.eman.kaal.core.util/java.util.-calendar/is-day-greater-than/","text":"core / cz.eman.kaal.core.util / java.util.Calendar / isDayGreaterThan isDayGreaterThan \u00b6 fun Calendar .isDayGreaterThan(calendar: Calendar ): Boolean Since 0.3.0","title":"Is day greater than"},{"location":"api/core/cz.eman.kaal.core.util/java.util.-calendar/is-day-greater-than/#isdaygreaterthan","text":"fun Calendar .isDayGreaterThan(calendar: Calendar ): Boolean Since 0.3.0","title":"isDayGreaterThan"},{"location":"api/core/cz.eman.kaal.core.util/java.util.-calendar/is-day-less-than/","text":"core / cz.eman.kaal.core.util / java.util.Calendar / isDayLessThan isDayLessThan \u00b6 fun Calendar .isDayLessThan(calendar: Calendar ): Boolean Since 0.3.0","title":"Is day less than"},{"location":"api/core/cz.eman.kaal.core.util/java.util.-calendar/is-day-less-than/#isdaylessthan","text":"fun Calendar .isDayLessThan(calendar: Calendar ): Boolean Since 0.3.0","title":"isDayLessThan"},{"location":"api/core/cz.eman.kaal.core.util/java.util.-calendar/is-same-day/","text":"core / cz.eman.kaal.core.util / java.util.Calendar / isSameDay isSameDay \u00b6 fun Calendar .isSameDay(calendar: Calendar ): Boolean Since 0.3.0","title":"Is same day"},{"location":"api/core/cz.eman.kaal.core.util/java.util.-calendar/is-same-day/#issameday","text":"fun Calendar .isSameDay(calendar: Calendar ): Boolean Since 0.3.0","title":"isSameDay"},{"location":"api/core/cz.eman.kaal.core.util/java.util.-calendar/month/","text":"core / cz.eman.kaal.core.util / java.util.Calendar / month month \u00b6 val Calendar .month: Int","title":"Month"},{"location":"api/core/cz.eman.kaal.core.util/java.util.-calendar/month/#month","text":"val Calendar .month: Int","title":"month"},{"location":"api/core/cz.eman.kaal.core.util/java.util.-calendar/normalize/","text":"core / cz.eman.kaal.core.util / java.util.Calendar / normalize normalize \u00b6 fun Calendar .normalize(): Calendar","title":"Normalize"},{"location":"api/core/cz.eman.kaal.core.util/java.util.-calendar/normalize/#normalize","text":"fun Calendar .normalize(): Calendar","title":"normalize"},{"location":"api/core/cz.eman.kaal.core.util/java.util.-calendar/year/","text":"core / cz.eman.kaal.core.util / java.util.Calendar / year year \u00b6 val Calendar .year: Int","title":"Year"},{"location":"api/core/cz.eman.kaal.core.util/java.util.-calendar/year/#year","text":"val Calendar .year: Int","title":"year"},{"location":"api/core/cz.eman.kaal.core.util/kotlin.-long/","text":"core / cz.eman.kaal.core.util / kotlin.Long Extensions for kotlin.Long \u00b6 Name Summary timestampToCalendar fun Long .timestampToCalendar(): Calendar","title":"Index"},{"location":"api/core/cz.eman.kaal.core.util/kotlin.-long/#extensions-for-kotlinlong","text":"Name Summary timestampToCalendar fun Long .timestampToCalendar(): Calendar","title":"Extensions for kotlin.Long"},{"location":"api/core/cz.eman.kaal.core.util/kotlin.-long/timestamp-to-calendar/","text":"core / cz.eman.kaal.core.util / kotlin.Long / timestampToCalendar timestampToCalendar \u00b6 fun Long .timestampToCalendar(): Calendar","title":"Timestamp to calendar"},{"location":"api/core/cz.eman.kaal.core.util/kotlin.-long/timestamp-to-calendar/#timestamptocalendar","text":"fun Long .timestampToCalendar(): Calendar","title":"timestampToCalendar"},{"location":"api/domain/","text":"domain Packages \u00b6 Name Summary cz.eman.kaal.domain.exception cz.eman.kaal.domain.mapper cz.eman.kaal.domain.result cz.eman.kaal.domain.usecases Index \u00b6 All Types","title":"domain"},{"location":"api/domain/#packages","text":"Name Summary cz.eman.kaal.domain.exception cz.eman.kaal.domain.mapper cz.eman.kaal.domain.result cz.eman.kaal.domain.usecases","title":"Packages"},{"location":"api/domain/#index","text":"All Types","title":"Index"},{"location":"api/domain/alltypes/","text":"All Types \u00b6 Name Summary cz.eman.kaal.domain.result.ApiErrorResult \u00b6 | cz.eman.kaal.domain.result.DataResult \u00b6 | cz.eman.kaal.domain.exception.EmptyBodyException \u00b6 Exception that there is an empty body inside of response | cz.eman.kaal.domain.result.ErrorCode \u00b6 | cz.eman.kaal.domain.result.ErrorResult \u00b6 | cz.eman.kaal.domain.result.HttpStatusErrorCode \u00b6 The enum defines standard HTTP status codes which represent client or server error. The codes are defined according to Internet standard . | cz.eman.kaal.domain.mapper.Mapper \u00b6 An abstract class which should be implemented by a simple mapper with one specific object | cz.eman.kaal.domain.result.Result \u00b6 val result = Result.Success(\"Hello World!\") val error = Result.Error(ErrorResult(\"Some error text\")) | cz.eman.kaal.domain.usecases.UseCase \u00b6 Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). | cz.eman.kaal.domain.usecases.UseCaseNoParams \u00b6 Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). | cz.eman.kaal.domain.usecases.UseCaseResult \u00b6 Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). | cz.eman.kaal.domain.usecases.UseCaseResultNoParams \u00b6 Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract).","title":"Index"},{"location":"api/domain/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"api/domain/alltypes/#czemankaaldomainresultapierrorresult","text":"|","title":"cz.eman.kaal.domain.result.ApiErrorResult"},{"location":"api/domain/alltypes/#czemankaaldomainresultdataresult","text":"|","title":"cz.eman.kaal.domain.result.DataResult"},{"location":"api/domain/alltypes/#czemankaaldomainexceptionemptybodyexception","text":"Exception that there is an empty body inside of response |","title":"cz.eman.kaal.domain.exception.EmptyBodyException"},{"location":"api/domain/alltypes/#czemankaaldomainresulterrorcode","text":"|","title":"cz.eman.kaal.domain.result.ErrorCode"},{"location":"api/domain/alltypes/#czemankaaldomainresulterrorresult","text":"|","title":"cz.eman.kaal.domain.result.ErrorResult"},{"location":"api/domain/alltypes/#czemankaaldomainresulthttpstatuserrorcode","text":"The enum defines standard HTTP status codes which represent client or server error. The codes are defined according to Internet standard . |","title":"cz.eman.kaal.domain.result.HttpStatusErrorCode"},{"location":"api/domain/alltypes/#czemankaaldomainmappermapper","text":"An abstract class which should be implemented by a simple mapper with one specific object |","title":"cz.eman.kaal.domain.mapper.Mapper"},{"location":"api/domain/alltypes/#czemankaaldomainresultresult","text":"val result = Result.Success(\"Hello World!\") val error = Result.Error(ErrorResult(\"Some error text\")) |","title":"cz.eman.kaal.domain.result.Result"},{"location":"api/domain/alltypes/#czemankaaldomainusecasesusecase","text":"Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). |","title":"cz.eman.kaal.domain.usecases.UseCase"},{"location":"api/domain/alltypes/#czemankaaldomainusecasesusecasenoparams","text":"Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). |","title":"cz.eman.kaal.domain.usecases.UseCaseNoParams"},{"location":"api/domain/alltypes/#czemankaaldomainusecasesusecaseresult","text":"Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). |","title":"cz.eman.kaal.domain.usecases.UseCaseResult"},{"location":"api/domain/alltypes/#czemankaaldomainusecasesusecaseresultnoparams","text":"Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract).","title":"cz.eman.kaal.domain.usecases.UseCaseResultNoParams"},{"location":"api/domain/cz.eman.kaal.domain.exception/","text":"domain / cz.eman.kaal.domain.exception Package cz.eman.kaal.domain.exception \u00b6 Exceptions \u00b6 Name Summary EmptyBodyException Exception that there is an empty body inside of response class EmptyBodyException : IOException","title":"Index"},{"location":"api/domain/cz.eman.kaal.domain.exception/#package-czemankaaldomainexception","text":"","title":"Package cz.eman.kaal.domain.exception"},{"location":"api/domain/cz.eman.kaal.domain.exception/#exceptions","text":"Name Summary EmptyBodyException Exception that there is an empty body inside of response class EmptyBodyException : IOException","title":"Exceptions"},{"location":"api/domain/cz.eman.kaal.domain.exception/-empty-body-exception/","text":"domain / cz.eman.kaal.domain.exception / EmptyBodyException EmptyBodyException \u00b6 class EmptyBodyException : IOException Exception that there is an empty body inside of response Author Roman Holomek <> Since 1.0.0 Constructors \u00b6 Name Summary <init> Exception that there is an empty body inside of response EmptyBodyException()","title":"Index"},{"location":"api/domain/cz.eman.kaal.domain.exception/-empty-body-exception/#emptybodyexception","text":"class EmptyBodyException : IOException Exception that there is an empty body inside of response Author Roman Holomek <> Since 1.0.0","title":"EmptyBodyException"},{"location":"api/domain/cz.eman.kaal.domain.exception/-empty-body-exception/#constructors","text":"Name Summary <init> Exception that there is an empty body inside of response EmptyBodyException()","title":"Constructors"},{"location":"api/domain/cz.eman.kaal.domain.exception/-empty-body-exception/-init-/","text":"domain / cz.eman.kaal.domain.exception / EmptyBodyException / <init> <init> \u00b6 EmptyBodyException() Exception that there is an empty body inside of response Author Roman Holomek <> Since 1.0.0","title":" init "},{"location":"api/domain/cz.eman.kaal.domain.exception/-empty-body-exception/-init-/#init","text":"EmptyBodyException() Exception that there is an empty body inside of response Author Roman Holomek <> Since 1.0.0","title":"&lt;init&gt;"},{"location":"api/domain/cz.eman.kaal.domain.mapper/","text":"domain / cz.eman.kaal.domain.mapper Package cz.eman.kaal.domain.mapper \u00b6 Types \u00b6 Name Summary Mapper An abstract class which should be implemented by a simple mapper with one specific object abstract class Mapper<in T, out R>","title":"Index"},{"location":"api/domain/cz.eman.kaal.domain.mapper/#package-czemankaaldomainmapper","text":"","title":"Package cz.eman.kaal.domain.mapper"},{"location":"api/domain/cz.eman.kaal.domain.mapper/#types","text":"Name Summary Mapper An abstract class which should be implemented by a simple mapper with one specific object abstract class Mapper<in T, out R>","title":"Types"},{"location":"api/domain/cz.eman.kaal.domain.mapper/-mapper/","text":"domain / cz.eman.kaal.domain.mapper / Mapper Mapper \u00b6 abstract class Mapper<in T, out R> An abstract class which should be implemented by a simple mapper with one specific object Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0 Constructors \u00b6 Name Summary <init> An abstract class which should be implemented by a simple mapper with one specific object Mapper() Functions \u00b6 Name Summary mapFrom abstract fun mapFrom(from: T): R","title":"Index"},{"location":"api/domain/cz.eman.kaal.domain.mapper/-mapper/#mapper","text":"abstract class Mapper<in T, out R> An abstract class which should be implemented by a simple mapper with one specific object Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":"Mapper"},{"location":"api/domain/cz.eman.kaal.domain.mapper/-mapper/#constructors","text":"Name Summary <init> An abstract class which should be implemented by a simple mapper with one specific object Mapper()","title":"Constructors"},{"location":"api/domain/cz.eman.kaal.domain.mapper/-mapper/#functions","text":"Name Summary mapFrom abstract fun mapFrom(from: T): R","title":"Functions"},{"location":"api/domain/cz.eman.kaal.domain.mapper/-mapper/-init-/","text":"domain / cz.eman.kaal.domain.mapper / Mapper / <init> <init> \u00b6 Mapper() An abstract class which should be implemented by a simple mapper with one specific object Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":" init "},{"location":"api/domain/cz.eman.kaal.domain.mapper/-mapper/-init-/#init","text":"Mapper() An abstract class which should be implemented by a simple mapper with one specific object Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":"&lt;init&gt;"},{"location":"api/domain/cz.eman.kaal.domain.mapper/-mapper/map-from/","text":"domain / cz.eman.kaal.domain.mapper / Mapper / mapFrom mapFrom \u00b6 abstract fun mapFrom(from: T): R","title":"Map from"},{"location":"api/domain/cz.eman.kaal.domain.mapper/-mapper/map-from/#mapfrom","text":"abstract fun mapFrom(from: T): R","title":"mapFrom"},{"location":"api/domain/cz.eman.kaal.domain.result/","text":"domain / cz.eman.kaal.domain.result Package cz.eman.kaal.domain.result \u00b6 Types \u00b6 Name Summary ApiErrorResult data class ApiErrorResult : ErrorResult DataResult data class DataResult<T> ErrorCode interface ErrorCode ErrorResult open class ErrorResult HttpStatusErrorCode The enum defines standard HTTP status codes which represent client or server error. The codes are defined according to Internet standard . enum class HttpStatusErrorCode : ErrorCode Result val result = Result.Success(\"Hello World!\") val error = Result.Error(ErrorResult(\"Some error text\")) <br> sealed class Result<out T> | Functions \u00b6 Name Summary callSafe Wrap a suspending call in try/catch. In case an exception is thrown, a Result.Error is created based on the errorCore and the errorMessage . suspend fun <T : Any > callSafe(call: suspend () -> Result <T>, errorCore: ErrorCode = ErrorCode.UNDEFINED, errorMessage: String ): Result <T>``suspend fun <T : Any > callSafe(call: suspend () -> Result <T>, errorCode: ErrorCode = ErrorCode.UNDEFINED, lazyMessage: () -> Any ): Result <T> errorCode The error code builder fun errorCode(code: Int ): ErrorCode","title":"Index"},{"location":"api/domain/cz.eman.kaal.domain.result/#package-czemankaaldomainresult","text":"","title":"Package cz.eman.kaal.domain.result"},{"location":"api/domain/cz.eman.kaal.domain.result/#types","text":"Name Summary ApiErrorResult data class ApiErrorResult : ErrorResult DataResult data class DataResult<T> ErrorCode interface ErrorCode ErrorResult open class ErrorResult HttpStatusErrorCode The enum defines standard HTTP status codes which represent client or server error. The codes are defined according to Internet standard . enum class HttpStatusErrorCode : ErrorCode Result val result = Result.Success(\"Hello World!\") val error = Result.Error(ErrorResult(\"Some error text\")) <br> sealed class Result<out T> |","title":"Types"},{"location":"api/domain/cz.eman.kaal.domain.result/#functions","text":"Name Summary callSafe Wrap a suspending call in try/catch. In case an exception is thrown, a Result.Error is created based on the errorCore and the errorMessage . suspend fun <T : Any > callSafe(call: suspend () -> Result <T>, errorCore: ErrorCode = ErrorCode.UNDEFINED, errorMessage: String ): Result <T>``suspend fun <T : Any > callSafe(call: suspend () -> Result <T>, errorCode: ErrorCode = ErrorCode.UNDEFINED, lazyMessage: () -> Any ): Result <T> errorCode The error code builder fun errorCode(code: Int ): ErrorCode","title":"Functions"},{"location":"api/domain/cz.eman.kaal.domain.result/call-safe/","text":"domain / cz.eman.kaal.domain.result / callSafe callSafe \u00b6 suspend fun <T : Any > callSafe(call: suspend () -> Result <T>, errorCore: ErrorCode = ErrorCode.UNDEFINED, errorMessage: String ): Result <T> Wrap a suspending call in try/catch. In case an exception is thrown, a Result.Error is created based on the errorCore and the errorMessage . suspend fun <T : Any > callSafe(call: suspend () -> Result <T>, errorCode: ErrorCode = ErrorCode.UNDEFINED, lazyMessage: () -> Any ): Result <T> Since 0.4.0 See Also callSafe","title":"Call safe"},{"location":"api/domain/cz.eman.kaal.domain.result/call-safe/#callsafe","text":"suspend fun <T : Any > callSafe(call: suspend () -> Result <T>, errorCore: ErrorCode = ErrorCode.UNDEFINED, errorMessage: String ): Result <T> Wrap a suspending call in try/catch. In case an exception is thrown, a Result.Error is created based on the errorCore and the errorMessage . suspend fun <T : Any > callSafe(call: suspend () -> Result <T>, errorCode: ErrorCode = ErrorCode.UNDEFINED, lazyMessage: () -> Any ): Result <T> Since 0.4.0 See Also callSafe","title":"callSafe"},{"location":"api/domain/cz.eman.kaal.domain.result/error-code/","text":"domain / cz.eman.kaal.domain.result / errorCode errorCode \u00b6 fun errorCode(code: Int ): ErrorCode The error code builder Parameters \u00b6 code - Integer representation of the error See Also ErrorCode","title":"Error code"},{"location":"api/domain/cz.eman.kaal.domain.result/error-code/#errorcode","text":"fun errorCode(code: Int ): ErrorCode The error code builder","title":"errorCode"},{"location":"api/domain/cz.eman.kaal.domain.result/error-code/#parameters","text":"code - Integer representation of the error See Also ErrorCode","title":"Parameters"},{"location":"api/domain/cz.eman.kaal.domain.result/-api-error-result/","text":"domain / cz.eman.kaal.domain.result / ApiErrorResult ApiErrorResult \u00b6 data class ApiErrorResult : ErrorResult Author Roman Holomek <> Constructors \u00b6 Name Summary <init> ApiErrorResult(code: ErrorCode , message: String ? = null, throwable: Throwable ? = null) Properties \u00b6 Name Summary code val code: ErrorCode message val message: String ? throwable val throwable: Throwable ?","title":"Index"},{"location":"api/domain/cz.eman.kaal.domain.result/-api-error-result/#apierrorresult","text":"data class ApiErrorResult : ErrorResult Author Roman Holomek <>","title":"ApiErrorResult"},{"location":"api/domain/cz.eman.kaal.domain.result/-api-error-result/#constructors","text":"Name Summary <init> ApiErrorResult(code: ErrorCode , message: String ? = null, throwable: Throwable ? = null)","title":"Constructors"},{"location":"api/domain/cz.eman.kaal.domain.result/-api-error-result/#properties","text":"Name Summary code val code: ErrorCode message val message: String ? throwable val throwable: Throwable ?","title":"Properties"},{"location":"api/domain/cz.eman.kaal.domain.result/-api-error-result/-init-/","text":"domain / cz.eman.kaal.domain.result / ApiErrorResult / <init> <init> \u00b6 ApiErrorResult(code: ErrorCode , message: String ? = null, throwable: Throwable ? = null) Author Roman Holomek <>","title":" init "},{"location":"api/domain/cz.eman.kaal.domain.result/-api-error-result/-init-/#init","text":"ApiErrorResult(code: ErrorCode , message: String ? = null, throwable: Throwable ? = null) Author Roman Holomek <>","title":"&lt;init&gt;"},{"location":"api/domain/cz.eman.kaal.domain.result/-api-error-result/code/","text":"domain / cz.eman.kaal.domain.result / ApiErrorResult / code code \u00b6 val code: ErrorCode","title":"Code"},{"location":"api/domain/cz.eman.kaal.domain.result/-api-error-result/code/#code","text":"val code: ErrorCode","title":"code"},{"location":"api/domain/cz.eman.kaal.domain.result/-api-error-result/message/","text":"domain / cz.eman.kaal.domain.result / ApiErrorResult / message message \u00b6 val message: String ?","title":"Message"},{"location":"api/domain/cz.eman.kaal.domain.result/-api-error-result/message/#message","text":"val message: String ?","title":"message"},{"location":"api/domain/cz.eman.kaal.domain.result/-api-error-result/throwable/","text":"domain / cz.eman.kaal.domain.result / ApiErrorResult / throwable throwable \u00b6 val throwable: Throwable ?","title":"Throwable"},{"location":"api/domain/cz.eman.kaal.domain.result/-api-error-result/throwable/#throwable","text":"val throwable: Throwable ?","title":"throwable"},{"location":"api/domain/cz.eman.kaal.domain.result/-data-result/","text":"domain / cz.eman.kaal.domain.result / DataResult DataResult \u00b6 data class DataResult<T> Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0 Constructors \u00b6 Name Summary <init> DataResult(data: T) Properties \u00b6 Name Summary data val data: T","title":"Index"},{"location":"api/domain/cz.eman.kaal.domain.result/-data-result/#dataresult","text":"data class DataResult<T> Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":"DataResult"},{"location":"api/domain/cz.eman.kaal.domain.result/-data-result/#constructors","text":"Name Summary <init> DataResult(data: T)","title":"Constructors"},{"location":"api/domain/cz.eman.kaal.domain.result/-data-result/#properties","text":"Name Summary data val data: T","title":"Properties"},{"location":"api/domain/cz.eman.kaal.domain.result/-data-result/-init-/","text":"domain / cz.eman.kaal.domain.result / DataResult / <init> <init> \u00b6 DataResult(data: T) Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":" init "},{"location":"api/domain/cz.eman.kaal.domain.result/-data-result/-init-/#init","text":"DataResult(data: T) Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":"&lt;init&gt;"},{"location":"api/domain/cz.eman.kaal.domain.result/-data-result/data/","text":"domain / cz.eman.kaal.domain.result / DataResult / data data \u00b6 val data: T","title":"Data"},{"location":"api/domain/cz.eman.kaal.domain.result/-data-result/data/#data","text":"val data: T","title":"data"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-code/","text":"domain / cz.eman.kaal.domain.result / ErrorCode ErrorCode \u00b6 interface ErrorCode Properties \u00b6 Name Summary value Integer representation of the error abstract val value: Int Companion Object Properties \u00b6 Name Summary UNDEFINED val UNDEFINED: ErrorCode Inheritors \u00b6 Name Summary HttpStatusErrorCode The enum defines standard HTTP status codes which represent client or server error. The codes are defined according to Internet standard . enum class HttpStatusErrorCode : ErrorCode","title":"Index"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-code/#errorcode","text":"interface ErrorCode","title":"ErrorCode"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-code/#properties","text":"Name Summary value Integer representation of the error abstract val value: Int","title":"Properties"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-code/#companion-object-properties","text":"Name Summary UNDEFINED val UNDEFINED: ErrorCode","title":"Companion Object Properties"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-code/#inheritors","text":"Name Summary HttpStatusErrorCode The enum defines standard HTTP status codes which represent client or server error. The codes are defined according to Internet standard . enum class HttpStatusErrorCode : ErrorCode","title":"Inheritors"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-code/-u-n-d-e-f-i-n-e-d/","text":"domain / cz.eman.kaal.domain.result / ErrorCode / UNDEFINED UNDEFINED \u00b6 val UNDEFINED: ErrorCode","title":" u n d e f i n e d"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-code/-u-n-d-e-f-i-n-e-d/#undefined","text":"val UNDEFINED: ErrorCode","title":"UNDEFINED"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-code/value/","text":"domain / cz.eman.kaal.domain.result / ErrorCode / value value \u00b6 abstract val value: Int Integer representation of the error","title":"Value"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-code/value/#value","text":"abstract val value: Int Integer representation of the error","title":"value"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-result/","text":"domain / cz.eman.kaal.domain.result / ErrorResult ErrorResult \u00b6 open class ErrorResult Constructors \u00b6 Name Summary <init> ErrorResult(code: ErrorCode = ErrorCode.UNDEFINED, message: String ? = null, throwable: Throwable ? = null) Properties \u00b6 Name Summary code open val code: ErrorCode message open val message: String ? throwable open val throwable: Throwable ? Functions \u00b6 Name Summary equals open fun equals(other: Any ?): Boolean hashCode open fun hashCode(): Int toString open fun toString(): String Inheritors \u00b6 Name Summary ApiErrorResult data class ApiErrorResult : ErrorResult","title":"Index"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-result/#errorresult","text":"open class ErrorResult","title":"ErrorResult"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-result/#constructors","text":"Name Summary <init> ErrorResult(code: ErrorCode = ErrorCode.UNDEFINED, message: String ? = null, throwable: Throwable ? = null)","title":"Constructors"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-result/#properties","text":"Name Summary code open val code: ErrorCode message open val message: String ? throwable open val throwable: Throwable ?","title":"Properties"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-result/#functions","text":"Name Summary equals open fun equals(other: Any ?): Boolean hashCode open fun hashCode(): Int toString open fun toString(): String","title":"Functions"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-result/#inheritors","text":"Name Summary ApiErrorResult data class ApiErrorResult : ErrorResult","title":"Inheritors"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-result/-init-/","text":"domain / cz.eman.kaal.domain.result / ErrorResult / <init> <init> \u00b6 ErrorResult(code: ErrorCode = ErrorCode.UNDEFINED, message: String ? = null, throwable: Throwable ? = null)","title":" init "},{"location":"api/domain/cz.eman.kaal.domain.result/-error-result/-init-/#init","text":"ErrorResult(code: ErrorCode = ErrorCode.UNDEFINED, message: String ? = null, throwable: Throwable ? = null)","title":"&lt;init&gt;"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-result/code/","text":"domain / cz.eman.kaal.domain.result / ErrorResult / code code \u00b6 open val code: ErrorCode","title":"Code"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-result/code/#code","text":"open val code: ErrorCode","title":"code"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-result/equals/","text":"domain / cz.eman.kaal.domain.result / ErrorResult / equals equals \u00b6 open fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-result/equals/#equals","text":"open fun equals(other: Any ?): Boolean","title":"equals"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-result/hash-code/","text":"domain / cz.eman.kaal.domain.result / ErrorResult / hashCode hashCode \u00b6 open fun hashCode(): Int","title":"Hash code"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-result/hash-code/#hashcode","text":"open fun hashCode(): Int","title":"hashCode"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-result/message/","text":"domain / cz.eman.kaal.domain.result / ErrorResult / message message \u00b6 open val message: String ?","title":"Message"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-result/message/#message","text":"open val message: String ?","title":"message"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-result/throwable/","text":"domain / cz.eman.kaal.domain.result / ErrorResult / throwable throwable \u00b6 open val throwable: Throwable ?","title":"Throwable"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-result/throwable/#throwable","text":"open val throwable: Throwable ?","title":"throwable"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-result/to-string/","text":"domain / cz.eman.kaal.domain.result / ErrorResult / toString toString \u00b6 open fun toString(): String","title":"To string"},{"location":"api/domain/cz.eman.kaal.domain.result/-error-result/to-string/#tostring","text":"open fun toString(): String","title":"toString"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode HttpStatusErrorCode \u00b6 enum class HttpStatusErrorCode : ErrorCode The enum defines standard HTTP status codes which represent client or server error. The codes are defined according to Internet standard . The types of error: 4xx: Client Error - The request contains bad syntax or cannot be fulfilled 5xx: Server Error - The server failed to fulfill an apparently valid request Author Filip \u0160m\u00edd Since 0.4.0 Enum Values \u00b6 Name Summary BAD_REQUEST UNAUTHORIZED PAYMENT_REQUIRED FORBIDDEN NOT_FOUND METHOD_NOT_ALLOWED NOT_ACCEPTABLE PROXY_AUTHENTICATION_REQUIRED REQUEST_TIMEOUT CONFLICT GONE LENGTH_REQUIRED PRECONDITION_FAILED PAYLOAD_TOO_LARGE URI_TOO_LONG UNSUPPORTED_MEDIA_TYPE RANGE_NOT_SATISFIABLE EXPECTATION_FAILED MISDIRECTED_REQUEST UNPROCESSABLE_ENTITY LOCKED FAILED_DEPENDENCY TOO_EARLY UPGRADE_REQUIRED PRECONDITION_REQUIRED TOO_MANY_REQUESTS REQUEST_HEADER_FIELDS_TOO_LARGE UNAVAILABLE_FOR_LEGAL_REASONS INTERNAL_SERVER_ERROR NOT_IMPLEMENTED BAD_GATEWAY SERVICE_UNAVAILABLE GATEWAY_TIMEOUT HTTP_VERSION_NOT_SUPPORTED VARIANT_ALSO_NEGOTIATES INSUFFICIENT_STORAGE LOOP_DETECTED NOT_EXTENDED NETWORK_AUTHENTICATION_REQUIRED Properties \u00b6 Name Summary value Integer representation of the error val value: Int Companion Object Functions \u00b6 Name Summary valueOf Returns the enum constant of this type with the specified value . fun valueOf(value: Int ): HttpStatusErrorCode","title":"Index"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/#httpstatuserrorcode","text":"enum class HttpStatusErrorCode : ErrorCode The enum defines standard HTTP status codes which represent client or server error. The codes are defined according to Internet standard . The types of error: 4xx: Client Error - The request contains bad syntax or cannot be fulfilled 5xx: Server Error - The server failed to fulfill an apparently valid request Author Filip \u0160m\u00edd Since 0.4.0","title":"HttpStatusErrorCode"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/#enum-values","text":"Name Summary BAD_REQUEST UNAUTHORIZED PAYMENT_REQUIRED FORBIDDEN NOT_FOUND METHOD_NOT_ALLOWED NOT_ACCEPTABLE PROXY_AUTHENTICATION_REQUIRED REQUEST_TIMEOUT CONFLICT GONE LENGTH_REQUIRED PRECONDITION_FAILED PAYLOAD_TOO_LARGE URI_TOO_LONG UNSUPPORTED_MEDIA_TYPE RANGE_NOT_SATISFIABLE EXPECTATION_FAILED MISDIRECTED_REQUEST UNPROCESSABLE_ENTITY LOCKED FAILED_DEPENDENCY TOO_EARLY UPGRADE_REQUIRED PRECONDITION_REQUIRED TOO_MANY_REQUESTS REQUEST_HEADER_FIELDS_TOO_LARGE UNAVAILABLE_FOR_LEGAL_REASONS INTERNAL_SERVER_ERROR NOT_IMPLEMENTED BAD_GATEWAY SERVICE_UNAVAILABLE GATEWAY_TIMEOUT HTTP_VERSION_NOT_SUPPORTED VARIANT_ALSO_NEGOTIATES INSUFFICIENT_STORAGE LOOP_DETECTED NOT_EXTENDED NETWORK_AUTHENTICATION_REQUIRED","title":"Enum Values"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/#properties","text":"Name Summary value Integer representation of the error val value: Int","title":"Properties"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/#companion-object-functions","text":"Name Summary valueOf Returns the enum constant of this type with the specified value . fun valueOf(value: Int ): HttpStatusErrorCode","title":"Companion Object Functions"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-b-a-d_-g-a-t-e-w-a-y/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / BAD_GATEWAY BAD_GATEWAY \u00b6 BAD_GATEWAY","title":" b a d  g a t e w a y"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-b-a-d_-g-a-t-e-w-a-y/#bad_gateway","text":"BAD_GATEWAY","title":"BAD_GATEWAY"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-b-a-d_-r-e-q-u-e-s-t/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / BAD_REQUEST BAD_REQUEST \u00b6 BAD_REQUEST","title":" b a d  r e q u e s t"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-b-a-d_-r-e-q-u-e-s-t/#bad_request","text":"BAD_REQUEST","title":"BAD_REQUEST"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-c-o-n-f-l-i-c-t/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / CONFLICT CONFLICT \u00b6 CONFLICT","title":" c o n f l i c t"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-c-o-n-f-l-i-c-t/#conflict","text":"CONFLICT","title":"CONFLICT"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-e-x-p-e-c-t-a-t-i-o-n_-f-a-i-l-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / EXPECTATION_FAILED EXPECTATION_FAILED \u00b6 EXPECTATION_FAILED","title":" e x p e c t a t i o n  f a i l e d"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-e-x-p-e-c-t-a-t-i-o-n_-f-a-i-l-e-d/#expectation_failed","text":"EXPECTATION_FAILED","title":"EXPECTATION_FAILED"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-f-a-i-l-e-d_-d-e-p-e-n-d-e-n-c-y/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / FAILED_DEPENDENCY FAILED_DEPENDENCY \u00b6 FAILED_DEPENDENCY","title":" f a i l e d  d e p e n d e n c y"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-f-a-i-l-e-d_-d-e-p-e-n-d-e-n-c-y/#failed_dependency","text":"FAILED_DEPENDENCY","title":"FAILED_DEPENDENCY"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-f-o-r-b-i-d-d-e-n/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / FORBIDDEN FORBIDDEN \u00b6 FORBIDDEN","title":" f o r b i d d e n"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-f-o-r-b-i-d-d-e-n/#forbidden","text":"FORBIDDEN","title":"FORBIDDEN"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-g-a-t-e-w-a-y_-t-i-m-e-o-u-t/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / GATEWAY_TIMEOUT GATEWAY_TIMEOUT \u00b6 GATEWAY_TIMEOUT","title":" g a t e w a y  t i m e o u t"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-g-a-t-e-w-a-y_-t-i-m-e-o-u-t/#gateway_timeout","text":"GATEWAY_TIMEOUT","title":"GATEWAY_TIMEOUT"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-g-o-n-e/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / GONE GONE \u00b6 GONE","title":" g o n e"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-g-o-n-e/#gone","text":"GONE","title":"GONE"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-h-t-t-p_-v-e-r-s-i-o-n_-n-o-t_-s-u-p-p-o-r-t-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / HTTP_VERSION_NOT_SUPPORTED HTTP_VERSION_NOT_SUPPORTED \u00b6 HTTP_VERSION_NOT_SUPPORTED","title":" h t t p  v e r s i o n  n o t  s u p p o r t e d"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-h-t-t-p_-v-e-r-s-i-o-n_-n-o-t_-s-u-p-p-o-r-t-e-d/#http_version_not_supported","text":"HTTP_VERSION_NOT_SUPPORTED","title":"HTTP_VERSION_NOT_SUPPORTED"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-i-n-s-u-f-f-i-c-i-e-n-t_-s-t-o-r-a-g-e/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / INSUFFICIENT_STORAGE INSUFFICIENT_STORAGE \u00b6 INSUFFICIENT_STORAGE","title":" i n s u f f i c i e n t  s t o r a g e"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-i-n-s-u-f-f-i-c-i-e-n-t_-s-t-o-r-a-g-e/#insufficient_storage","text":"INSUFFICIENT_STORAGE","title":"INSUFFICIENT_STORAGE"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-i-n-t-e-r-n-a-l_-s-e-r-v-e-r_-e-r-r-o-r/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / INTERNAL_SERVER_ERROR INTERNAL_SERVER_ERROR \u00b6 INTERNAL_SERVER_ERROR","title":" i n t e r n a l  s e r v e r  e r r o r"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-i-n-t-e-r-n-a-l_-s-e-r-v-e-r_-e-r-r-o-r/#internal_server_error","text":"INTERNAL_SERVER_ERROR","title":"INTERNAL_SERVER_ERROR"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-l-e-n-g-t-h_-r-e-q-u-i-r-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / LENGTH_REQUIRED LENGTH_REQUIRED \u00b6 LENGTH_REQUIRED","title":" l e n g t h  r e q u i r e d"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-l-e-n-g-t-h_-r-e-q-u-i-r-e-d/#length_required","text":"LENGTH_REQUIRED","title":"LENGTH_REQUIRED"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-l-o-c-k-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / LOCKED LOCKED \u00b6 LOCKED","title":" l o c k e d"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-l-o-c-k-e-d/#locked","text":"LOCKED","title":"LOCKED"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-l-o-o-p_-d-e-t-e-c-t-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / LOOP_DETECTED LOOP_DETECTED \u00b6 LOOP_DETECTED","title":" l o o p  d e t e c t e d"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-l-o-o-p_-d-e-t-e-c-t-e-d/#loop_detected","text":"LOOP_DETECTED","title":"LOOP_DETECTED"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-m-e-t-h-o-d_-n-o-t_-a-l-l-o-w-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / METHOD_NOT_ALLOWED METHOD_NOT_ALLOWED \u00b6 METHOD_NOT_ALLOWED","title":" m e t h o d  n o t  a l l o w e d"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-m-e-t-h-o-d_-n-o-t_-a-l-l-o-w-e-d/#method_not_allowed","text":"METHOD_NOT_ALLOWED","title":"METHOD_NOT_ALLOWED"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-m-i-s-d-i-r-e-c-t-e-d_-r-e-q-u-e-s-t/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / MISDIRECTED_REQUEST MISDIRECTED_REQUEST \u00b6 MISDIRECTED_REQUEST","title":" m i s d i r e c t e d  r e q u e s t"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-m-i-s-d-i-r-e-c-t-e-d_-r-e-q-u-e-s-t/#misdirected_request","text":"MISDIRECTED_REQUEST","title":"MISDIRECTED_REQUEST"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-n-e-t-w-o-r-k_-a-u-t-h-e-n-t-i-c-a-t-i-o-n_-r-e-q-u-i-r-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / NETWORK_AUTHENTICATION_REQUIRED NETWORK_AUTHENTICATION_REQUIRED \u00b6 NETWORK_AUTHENTICATION_REQUIRED","title":" n e t w o r k  a u t h e n t i c a t i o n  r e q u i r e d"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-n-e-t-w-o-r-k_-a-u-t-h-e-n-t-i-c-a-t-i-o-n_-r-e-q-u-i-r-e-d/#network_authentication_required","text":"NETWORK_AUTHENTICATION_REQUIRED","title":"NETWORK_AUTHENTICATION_REQUIRED"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-n-o-t_-a-c-c-e-p-t-a-b-l-e/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / NOT_ACCEPTABLE NOT_ACCEPTABLE \u00b6 NOT_ACCEPTABLE","title":" n o t  a c c e p t a b l e"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-n-o-t_-a-c-c-e-p-t-a-b-l-e/#not_acceptable","text":"NOT_ACCEPTABLE","title":"NOT_ACCEPTABLE"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-n-o-t_-e-x-t-e-n-d-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / NOT_EXTENDED NOT_EXTENDED \u00b6 NOT_EXTENDED","title":" n o t  e x t e n d e d"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-n-o-t_-e-x-t-e-n-d-e-d/#not_extended","text":"NOT_EXTENDED","title":"NOT_EXTENDED"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-n-o-t_-f-o-u-n-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / NOT_FOUND NOT_FOUND \u00b6 NOT_FOUND","title":" n o t  f o u n d"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-n-o-t_-f-o-u-n-d/#not_found","text":"NOT_FOUND","title":"NOT_FOUND"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-n-o-t_-i-m-p-l-e-m-e-n-t-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / NOT_IMPLEMENTED NOT_IMPLEMENTED \u00b6 NOT_IMPLEMENTED","title":" n o t  i m p l e m e n t e d"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-n-o-t_-i-m-p-l-e-m-e-n-t-e-d/#not_implemented","text":"NOT_IMPLEMENTED","title":"NOT_IMPLEMENTED"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-p-a-y-l-o-a-d_-t-o-o_-l-a-r-g-e/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / PAYLOAD_TOO_LARGE PAYLOAD_TOO_LARGE \u00b6 PAYLOAD_TOO_LARGE","title":" p a y l o a d  t o o  l a r g e"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-p-a-y-l-o-a-d_-t-o-o_-l-a-r-g-e/#payload_too_large","text":"PAYLOAD_TOO_LARGE","title":"PAYLOAD_TOO_LARGE"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-p-a-y-m-e-n-t_-r-e-q-u-i-r-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / PAYMENT_REQUIRED PAYMENT_REQUIRED \u00b6 PAYMENT_REQUIRED","title":" p a y m e n t  r e q u i r e d"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-p-a-y-m-e-n-t_-r-e-q-u-i-r-e-d/#payment_required","text":"PAYMENT_REQUIRED","title":"PAYMENT_REQUIRED"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-p-r-e-c-o-n-d-i-t-i-o-n_-f-a-i-l-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / PRECONDITION_FAILED PRECONDITION_FAILED \u00b6 PRECONDITION_FAILED","title":" p r e c o n d i t i o n  f a i l e d"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-p-r-e-c-o-n-d-i-t-i-o-n_-f-a-i-l-e-d/#precondition_failed","text":"PRECONDITION_FAILED","title":"PRECONDITION_FAILED"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-p-r-e-c-o-n-d-i-t-i-o-n_-r-e-q-u-i-r-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / PRECONDITION_REQUIRED PRECONDITION_REQUIRED \u00b6 PRECONDITION_REQUIRED","title":" p r e c o n d i t i o n  r e q u i r e d"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-p-r-e-c-o-n-d-i-t-i-o-n_-r-e-q-u-i-r-e-d/#precondition_required","text":"PRECONDITION_REQUIRED","title":"PRECONDITION_REQUIRED"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-p-r-o-x-y_-a-u-t-h-e-n-t-i-c-a-t-i-o-n_-r-e-q-u-i-r-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / PROXY_AUTHENTICATION_REQUIRED PROXY_AUTHENTICATION_REQUIRED \u00b6 PROXY_AUTHENTICATION_REQUIRED","title":" p r o x y  a u t h e n t i c a t i o n  r e q u i r e d"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-p-r-o-x-y_-a-u-t-h-e-n-t-i-c-a-t-i-o-n_-r-e-q-u-i-r-e-d/#proxy_authentication_required","text":"PROXY_AUTHENTICATION_REQUIRED","title":"PROXY_AUTHENTICATION_REQUIRED"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-r-a-n-g-e_-n-o-t_-s-a-t-i-s-f-i-a-b-l-e/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / RANGE_NOT_SATISFIABLE RANGE_NOT_SATISFIABLE \u00b6 RANGE_NOT_SATISFIABLE","title":" r a n g e  n o t  s a t i s f i a b l e"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-r-a-n-g-e_-n-o-t_-s-a-t-i-s-f-i-a-b-l-e/#range_not_satisfiable","text":"RANGE_NOT_SATISFIABLE","title":"RANGE_NOT_SATISFIABLE"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-r-e-q-u-e-s-t_-h-e-a-d-e-r_-f-i-e-l-d-s_-t-o-o_-l-a-r-g-e/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / REQUEST_HEADER_FIELDS_TOO_LARGE REQUEST_HEADER_FIELDS_TOO_LARGE \u00b6 REQUEST_HEADER_FIELDS_TOO_LARGE","title":" r e q u e s t  h e a d e r  f i e l d s  t o o  l a r g e"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-r-e-q-u-e-s-t_-h-e-a-d-e-r_-f-i-e-l-d-s_-t-o-o_-l-a-r-g-e/#request_header_fields_too_large","text":"REQUEST_HEADER_FIELDS_TOO_LARGE","title":"REQUEST_HEADER_FIELDS_TOO_LARGE"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-r-e-q-u-e-s-t_-t-i-m-e-o-u-t/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / REQUEST_TIMEOUT REQUEST_TIMEOUT \u00b6 REQUEST_TIMEOUT","title":" r e q u e s t  t i m e o u t"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-r-e-q-u-e-s-t_-t-i-m-e-o-u-t/#request_timeout","text":"REQUEST_TIMEOUT","title":"REQUEST_TIMEOUT"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-s-e-r-v-i-c-e_-u-n-a-v-a-i-l-a-b-l-e/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / SERVICE_UNAVAILABLE SERVICE_UNAVAILABLE \u00b6 SERVICE_UNAVAILABLE","title":" s e r v i c e  u n a v a i l a b l e"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-s-e-r-v-i-c-e_-u-n-a-v-a-i-l-a-b-l-e/#service_unavailable","text":"SERVICE_UNAVAILABLE","title":"SERVICE_UNAVAILABLE"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-t-o-o_-e-a-r-l-y/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / TOO_EARLY TOO_EARLY \u00b6 TOO_EARLY","title":" t o o  e a r l y"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-t-o-o_-e-a-r-l-y/#too_early","text":"TOO_EARLY","title":"TOO_EARLY"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-t-o-o_-m-a-n-y_-r-e-q-u-e-s-t-s/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / TOO_MANY_REQUESTS TOO_MANY_REQUESTS \u00b6 TOO_MANY_REQUESTS","title":" t o o  m a n y  r e q u e s t s"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-t-o-o_-m-a-n-y_-r-e-q-u-e-s-t-s/#too_many_requests","text":"TOO_MANY_REQUESTS","title":"TOO_MANY_REQUESTS"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-n-a-u-t-h-o-r-i-z-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / UNAUTHORIZED UNAUTHORIZED \u00b6 UNAUTHORIZED","title":" u n a u t h o r i z e d"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-n-a-u-t-h-o-r-i-z-e-d/#unauthorized","text":"UNAUTHORIZED","title":"UNAUTHORIZED"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-n-a-v-a-i-l-a-b-l-e_-f-o-r_-l-e-g-a-l_-r-e-a-s-o-n-s/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / UNAVAILABLE_FOR_LEGAL_REASONS UNAVAILABLE_FOR_LEGAL_REASONS \u00b6 UNAVAILABLE_FOR_LEGAL_REASONS","title":" u n a v a i l a b l e  f o r  l e g a l  r e a s o n s"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-n-a-v-a-i-l-a-b-l-e_-f-o-r_-l-e-g-a-l_-r-e-a-s-o-n-s/#unavailable_for_legal_reasons","text":"UNAVAILABLE_FOR_LEGAL_REASONS","title":"UNAVAILABLE_FOR_LEGAL_REASONS"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-n-p-r-o-c-e-s-s-a-b-l-e_-e-n-t-i-t-y/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / UNPROCESSABLE_ENTITY UNPROCESSABLE_ENTITY \u00b6 UNPROCESSABLE_ENTITY","title":" u n p r o c e s s a b l e  e n t i t y"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-n-p-r-o-c-e-s-s-a-b-l-e_-e-n-t-i-t-y/#unprocessable_entity","text":"UNPROCESSABLE_ENTITY","title":"UNPROCESSABLE_ENTITY"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-n-s-u-p-p-o-r-t-e-d_-m-e-d-i-a_-t-y-p-e/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / UNSUPPORTED_MEDIA_TYPE UNSUPPORTED_MEDIA_TYPE \u00b6 UNSUPPORTED_MEDIA_TYPE","title":" u n s u p p o r t e d  m e d i a  t y p e"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-n-s-u-p-p-o-r-t-e-d_-m-e-d-i-a_-t-y-p-e/#unsupported_media_type","text":"UNSUPPORTED_MEDIA_TYPE","title":"UNSUPPORTED_MEDIA_TYPE"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-p-g-r-a-d-e_-r-e-q-u-i-r-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / UPGRADE_REQUIRED UPGRADE_REQUIRED \u00b6 UPGRADE_REQUIRED","title":" u p g r a d e  r e q u i r e d"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-p-g-r-a-d-e_-r-e-q-u-i-r-e-d/#upgrade_required","text":"UPGRADE_REQUIRED","title":"UPGRADE_REQUIRED"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-r-i_-t-o-o_-l-o-n-g/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / URI_TOO_LONG URI_TOO_LONG \u00b6 URI_TOO_LONG","title":" u r i  t o o  l o n g"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-r-i_-t-o-o_-l-o-n-g/#uri_too_long","text":"URI_TOO_LONG","title":"URI_TOO_LONG"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-v-a-r-i-a-n-t_-a-l-s-o_-n-e-g-o-t-i-a-t-e-s/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / VARIANT_ALSO_NEGOTIATES VARIANT_ALSO_NEGOTIATES \u00b6 VARIANT_ALSO_NEGOTIATES","title":" v a r i a n t  a l s o  n e g o t i a t e s"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/-v-a-r-i-a-n-t_-a-l-s-o_-n-e-g-o-t-i-a-t-e-s/#variant_also_negotiates","text":"VARIANT_ALSO_NEGOTIATES","title":"VARIANT_ALSO_NEGOTIATES"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/value-of/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / valueOf valueOf \u00b6 fun valueOf(value: Int ): HttpStatusErrorCode Returns the enum constant of this type with the specified value . Parameters \u00b6 value - Integer representation of the error status Exceptions \u00b6 IllegalArgumentException - If this enum type has no constant with the specified value .","title":"Value of"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/value-of/#valueof","text":"fun valueOf(value: Int ): HttpStatusErrorCode Returns the enum constant of this type with the specified value .","title":"valueOf"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/value-of/#parameters","text":"value - Integer representation of the error status","title":"Parameters"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/value-of/#exceptions","text":"IllegalArgumentException - If this enum type has no constant with the specified value .","title":"Exceptions"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/value/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / value value \u00b6 val value: Int Integer representation of the error","title":"Value"},{"location":"api/domain/cz.eman.kaal.domain.result/-http-status-error-code/value/#value","text":"val value: Int Integer representation of the error","title":"value"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/","text":"domain / cz.eman.kaal.domain.result / Result Result \u00b6 sealed class Result<out T> val result = Result.Success(\"Hello World!\") val error = Result.Error(ErrorResult(\"Some error text\")) Author vaclav.souhrada@eman.cz Since 0.1.0 Types \u00b6 Name Summary Error data class Error<out T> : Result <T> Success data class Success<out T> : Result <T> Functions \u00b6 Name Summary getOrNull Returns the encapsulated value if this instance represents Success or null is returned fun getOrNull(): T? isError fun isError(): Boolean isFinished fun isFinished(): Boolean isSuccess fun isSuccess(): Boolean toString open fun toString(): String Companion Object Functions \u00b6 Name Summary error fun <T> error(error: ErrorResult , data: T? = null): Result <T> fun <T> error(errorCode: ErrorCode , data: T? = null, message: String ? = null, throwable: Throwable ? = null): Result <T> success fun <T> success(data: T): Result <T>","title":"Index"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/#result","text":"sealed class Result<out T> val result = Result.Success(\"Hello World!\") val error = Result.Error(ErrorResult(\"Some error text\")) Author vaclav.souhrada@eman.cz Since 0.1.0","title":"Result"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/#types","text":"Name Summary Error data class Error<out T> : Result <T> Success data class Success<out T> : Result <T>","title":"Types"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/#functions","text":"Name Summary getOrNull Returns the encapsulated value if this instance represents Success or null is returned fun getOrNull(): T? isError fun isError(): Boolean isFinished fun isFinished(): Boolean isSuccess fun isSuccess(): Boolean toString open fun toString(): String","title":"Functions"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/#companion-object-functions","text":"Name Summary error fun <T> error(error: ErrorResult , data: T? = null): Result <T> fun <T> error(errorCode: ErrorCode , data: T? = null, message: String ? = null, throwable: Throwable ? = null): Result <T> success fun <T> success(data: T): Result <T>","title":"Companion Object Functions"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/error/","text":"domain / cz.eman.kaal.domain.result / Result / error error \u00b6 fun <T> error(error: ErrorResult , data: T? = null): Result <T> fun <T> error(errorCode: ErrorCode , data: T? = null, message: String ? = null, throwable: Throwable ? = null): Result <T>","title":"Error"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/error/#error","text":"fun <T> error(error: ErrorResult , data: T? = null): Result <T> fun <T> error(errorCode: ErrorCode , data: T? = null, message: String ? = null, throwable: Throwable ? = null): Result <T>","title":"error"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/get-or-null/","text":"domain / cz.eman.kaal.domain.result / Result / getOrNull getOrNull \u00b6 fun getOrNull(): T? Returns the encapsulated value if this instance represents Success or null is returned","title":"Get or null"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/get-or-null/#getornull","text":"fun getOrNull(): T? Returns the encapsulated value if this instance represents Success or null is returned","title":"getOrNull"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/is-error/","text":"domain / cz.eman.kaal.domain.result / Result / isError isError \u00b6 fun isError(): Boolean","title":"Is error"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/is-error/#iserror","text":"fun isError(): Boolean","title":"isError"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/is-finished/","text":"domain / cz.eman.kaal.domain.result / Result / isFinished isFinished \u00b6 fun isFinished(): Boolean","title":"Is finished"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/is-finished/#isfinished","text":"fun isFinished(): Boolean","title":"isFinished"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/is-success/","text":"domain / cz.eman.kaal.domain.result / Result / isSuccess isSuccess \u00b6 fun isSuccess(): Boolean","title":"Is success"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/is-success/#issuccess","text":"fun isSuccess(): Boolean","title":"isSuccess"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/success/","text":"domain / cz.eman.kaal.domain.result / Result / success success \u00b6 fun <T> success(data: T): Result <T>","title":"Success"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/success/#success","text":"fun <T> success(data: T): Result <T>","title":"success"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/to-string/","text":"domain / cz.eman.kaal.domain.result / Result / toString toString \u00b6 open fun toString(): String","title":"To string"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/to-string/#tostring","text":"open fun toString(): String","title":"toString"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/-error/","text":"domain / cz.eman.kaal.domain.result / Result / Error Error \u00b6 data class Error<out T> : Result <T> Constructors \u00b6 Name Summary <init> Error(error: ErrorResult , data: T? = null) Properties \u00b6 Name Summary data val data: T? error val error: ErrorResult","title":"Index"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/-error/#error","text":"data class Error<out T> : Result <T>","title":"Error"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/-error/#constructors","text":"Name Summary <init> Error(error: ErrorResult , data: T? = null)","title":"Constructors"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/-error/#properties","text":"Name Summary data val data: T? error val error: ErrorResult","title":"Properties"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/-error/-init-/","text":"domain / cz.eman.kaal.domain.result / Result / Error / <init> <init> \u00b6 Error(error: ErrorResult , data: T? = null)","title":" init "},{"location":"api/domain/cz.eman.kaal.domain.result/-result/-error/-init-/#init","text":"Error(error: ErrorResult , data: T? = null)","title":"&lt;init&gt;"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/-error/data/","text":"domain / cz.eman.kaal.domain.result / Result / Error / data data \u00b6 val data: T?","title":"Data"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/-error/data/#data","text":"val data: T?","title":"data"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/-error/error/","text":"domain / cz.eman.kaal.domain.result / Result / Error / error error \u00b6 val error: ErrorResult","title":"Error"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/-error/error/#error","text":"val error: ErrorResult","title":"error"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/-success/","text":"domain / cz.eman.kaal.domain.result / Result / Success Success \u00b6 data class Success<out T> : Result <T> Constructors \u00b6 Name Summary <init> Success(data: T) Properties \u00b6 Name Summary data val data: T","title":"Index"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/-success/#success","text":"data class Success<out T> : Result <T>","title":"Success"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/-success/#constructors","text":"Name Summary <init> Success(data: T)","title":"Constructors"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/-success/#properties","text":"Name Summary data val data: T","title":"Properties"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/-success/-init-/","text":"domain / cz.eman.kaal.domain.result / Result / Success / <init> <init> \u00b6 Success(data: T)","title":" init "},{"location":"api/domain/cz.eman.kaal.domain.result/-result/-success/-init-/#init","text":"Success(data: T)","title":"&lt;init&gt;"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/-success/data/","text":"domain / cz.eman.kaal.domain.result / Result / Success / data data \u00b6 val data: T","title":"Data"},{"location":"api/domain/cz.eman.kaal.domain.result/-result/-success/data/#data","text":"val data: T","title":"data"},{"location":"api/domain/cz.eman.kaal.domain.usecases/","text":"domain / cz.eman.kaal.domain.usecases Package cz.eman.kaal.domain.usecases \u00b6 Types \u00b6 Name Summary UseCase Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCase<out T, in Params> UseCaseNoParams Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseNoParams<out T> : UseCase <T, Unit > UseCaseResult Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseResult<out T : Any , in Params> : UseCase < Result <T>, Params> UseCaseResultNoParams Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseResultNoParams<out T : Any > : UseCase < Result <T>, Unit >","title":"Index"},{"location":"api/domain/cz.eman.kaal.domain.usecases/#package-czemankaaldomainusecases","text":"","title":"Package cz.eman.kaal.domain.usecases"},{"location":"api/domain/cz.eman.kaal.domain.usecases/#types","text":"Name Summary UseCase Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCase<out T, in Params> UseCaseNoParams Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseNoParams<out T> : UseCase <T, Unit > UseCaseResult Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseResult<out T : Any , in Params> : UseCase < Result <T>, Params> UseCaseResultNoParams Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseResultNoParams<out T : Any > : UseCase < Result <T>, Unit >","title":"Types"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case/","text":"domain / cz.eman.kaal.domain.usecases / UseCase UseCase \u00b6 abstract class UseCase<out T, in Params> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0 Constructors \u00b6 Name Summary <init> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). UseCase() Functions \u00b6 Name Summary doWork Inner business logic of UseCase abstract suspend fun doWork(params: Params): T invoke Executes appropriate implementation of UseCase , suspend operator fun invoke(params: Params): T Inheritors \u00b6 Name Summary UseCaseNoParams Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseNoParams<out T> : UseCase <T, Unit > UseCaseResult Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseResult<out T : Any , in Params> : UseCase < Result <T>, Params> UseCaseResultNoParams Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseResultNoParams<out T : Any > : UseCase < Result <T>, Unit >","title":"Index"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case/#usecase","text":"abstract class UseCase<out T, in Params> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":"UseCase"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case/#constructors","text":"Name Summary <init> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). UseCase()","title":"Constructors"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case/#functions","text":"Name Summary doWork Inner business logic of UseCase abstract suspend fun doWork(params: Params): T invoke Executes appropriate implementation of UseCase , suspend operator fun invoke(params: Params): T","title":"Functions"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case/#inheritors","text":"Name Summary UseCaseNoParams Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseNoParams<out T> : UseCase <T, Unit > UseCaseResult Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseResult<out T : Any , in Params> : UseCase < Result <T>, Params> UseCaseResultNoParams Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseResultNoParams<out T : Any > : UseCase < Result <T>, Unit >","title":"Inheritors"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case/-init-/","text":"domain / cz.eman.kaal.domain.usecases / UseCase / <init> <init> \u00b6 UseCase() Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":" init "},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case/-init-/#init","text":"UseCase() Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":"&lt;init&gt;"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case/do-work/","text":"domain / cz.eman.kaal.domain.usecases / UseCase / doWork doWork \u00b6 protected abstract suspend fun doWork(params: Params): T Inner business logic of UseCase Parameters \u00b6 params - Set of input parameters Return type T of parameter. In the most common way the T is wrapped to a special use-case implementation.","title":"Do work"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case/do-work/#dowork","text":"protected abstract suspend fun doWork(params: Params): T Inner business logic of UseCase","title":"doWork"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case/do-work/#parameters","text":"params - Set of input parameters Return type T of parameter. In the most common way the T is wrapped to a special use-case implementation.","title":"Parameters"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case/invoke/","text":"domain / cz.eman.kaal.domain.usecases / UseCase / invoke invoke \u00b6 suspend operator fun invoke(params: Params): T Executes appropriate implementation of UseCase , Parameters \u00b6 params - Set of input parameters Return type T of parameter. In the most common way the T is wrapped to a special use-case implementation.","title":"Invoke"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case/invoke/#invoke","text":"suspend operator fun invoke(params: Params): T Executes appropriate implementation of UseCase ,","title":"invoke"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case/invoke/#parameters","text":"params - Set of input parameters Return type T of parameter. In the most common way the T is wrapped to a special use-case implementation.","title":"Parameters"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case-no-params/","text":"domain / cz.eman.kaal.domain.usecases / UseCaseNoParams UseCaseNoParams \u00b6 abstract class UseCaseNoParams<out T> : UseCase <T, Unit > Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author Roman Holomek (roman.holomek@eman.cz) Since 1.0.0 Constructors \u00b6 Name Summary <init> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). UseCaseNoParams() Functions \u00b6 Name Summary invoke suspend operator fun invoke(): T","title":"Index"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case-no-params/#usecasenoparams","text":"abstract class UseCaseNoParams<out T> : UseCase <T, Unit > Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author Roman Holomek (roman.holomek@eman.cz) Since 1.0.0","title":"UseCaseNoParams"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case-no-params/#constructors","text":"Name Summary <init> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). UseCaseNoParams()","title":"Constructors"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case-no-params/#functions","text":"Name Summary invoke suspend operator fun invoke(): T","title":"Functions"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case-no-params/-init-/","text":"domain / cz.eman.kaal.domain.usecases / UseCaseNoParams / <init> <init> \u00b6 UseCaseNoParams() Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author Roman Holomek (roman.holomek@eman.cz) Since 1.0.0","title":" init "},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case-no-params/-init-/#init","text":"UseCaseNoParams() Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author Roman Holomek (roman.holomek@eman.cz) Since 1.0.0","title":"&lt;init&gt;"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case-no-params/invoke/","text":"domain / cz.eman.kaal.domain.usecases / UseCaseNoParams / invoke invoke \u00b6 suspend operator fun invoke(): T","title":"Invoke"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case-no-params/invoke/#invoke","text":"suspend operator fun invoke(): T","title":"invoke"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case-result/","text":"domain / cz.eman.kaal.domain.usecases / UseCaseResult UseCaseResult \u00b6 abstract class UseCaseResult<out T : Any , in Params> : UseCase < Result <T>, Params> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0 Constructors \u00b6 Name Summary <init> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). UseCaseResult()","title":"Index"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case-result/#usecaseresult","text":"abstract class UseCaseResult<out T : Any , in Params> : UseCase < Result <T>, Params> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":"UseCaseResult"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case-result/#constructors","text":"Name Summary <init> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). UseCaseResult()","title":"Constructors"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case-result/-init-/","text":"domain / cz.eman.kaal.domain.usecases / UseCaseResult / <init> <init> \u00b6 UseCaseResult() Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":" init "},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case-result/-init-/#init","text":"UseCaseResult() Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":"&lt;init&gt;"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case-result-no-params/","text":"domain / cz.eman.kaal.domain.usecases / UseCaseResultNoParams UseCaseResultNoParams \u00b6 abstract class UseCaseResultNoParams<out T : Any > : UseCase < Result <T>, Unit > Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author Roman Holomek (roman.holomek@eman.cz) Constructors \u00b6 Name Summary <init> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). UseCaseResultNoParams() Functions \u00b6 Name Summary invoke suspend operator fun invoke(): Result <T>","title":"Index"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case-result-no-params/#usecaseresultnoparams","text":"abstract class UseCaseResultNoParams<out T : Any > : UseCase < Result <T>, Unit > Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author Roman Holomek (roman.holomek@eman.cz)","title":"UseCaseResultNoParams"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case-result-no-params/#constructors","text":"Name Summary <init> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). UseCaseResultNoParams()","title":"Constructors"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case-result-no-params/#functions","text":"Name Summary invoke suspend operator fun invoke(): Result <T>","title":"Functions"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case-result-no-params/-init-/","text":"domain / cz.eman.kaal.domain.usecases / UseCaseResultNoParams / <init> <init> \u00b6 UseCaseResultNoParams() Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author Roman Holomek (roman.holomek@eman.cz)","title":" init "},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case-result-no-params/-init-/#init","text":"UseCaseResultNoParams() Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author Roman Holomek (roman.holomek@eman.cz)","title":"&lt;init&gt;"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case-result-no-params/invoke/","text":"domain / cz.eman.kaal.domain.usecases / UseCaseResultNoParams / invoke invoke \u00b6 suspend operator fun invoke(): Result <T>","title":"Invoke"},{"location":"api/domain/cz.eman.kaal.domain.usecases/-use-case-result-no-params/invoke/#invoke","text":"suspend operator fun invoke(): Result <T>","title":"invoke"},{"location":"api/infrastructure/","text":"infrastructure Packages \u00b6 Name Summary cz.eman.kaal.infrastructure.common cz.eman.kaal.infrastructure.coroutines.channels Index \u00b6 All Types","title":"infrastructure"},{"location":"api/infrastructure/#packages","text":"Name Summary cz.eman.kaal.infrastructure.common cz.eman.kaal.infrastructure.coroutines.channels","title":"Packages"},{"location":"api/infrastructure/#index","text":"All Types","title":"Index"},{"location":"api/infrastructure/alltypes/","text":"All Types \u00b6 Name Summary (extensions in package cz.eman.kaal.infrastructure.coroutines.channels) androidx.lifecycle.LiveData \u00b6 | cz.eman.kaal.infrastructure.coroutines.channels.LiveDataChannel \u00b6 Class for managing data flow from LiveData to Channel and closing operations","title":"Index"},{"location":"api/infrastructure/alltypes/#all-types","text":"Name Summary (extensions in package cz.eman.kaal.infrastructure.coroutines.channels)","title":"All Types"},{"location":"api/infrastructure/alltypes/#androidxlifecyclelivedata","text":"|","title":"androidx.lifecycle.LiveData"},{"location":"api/infrastructure/alltypes/#czemankaalinfrastructurecoroutineschannelslivedatachannel","text":"Class for managing data flow from LiveData to Channel and closing operations","title":"cz.eman.kaal.infrastructure.coroutines.channels.LiveDataChannel"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.common/","text":"infrastructure / cz.eman.kaal.infrastructure.common Package cz.eman.kaal.infrastructure.common \u00b6 Functions \u00b6 Name Summary callResult suspend fun <Dto, T> callResult(responseCall: suspend () -> Response<Dto>, errorMessage: () -> String ?, map: suspend (Dto) -> T): Result<T> errorApiResult fun <Dto, T> errorApiResult(response: Response<Dto>): Result<T> errorResult fun <T> errorResult(message: String , throwable: Throwable ?): Result<T>","title":"Index"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.common/#package-czemankaalinfrastructurecommon","text":"","title":"Package cz.eman.kaal.infrastructure.common"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.common/#functions","text":"Name Summary callResult suspend fun <Dto, T> callResult(responseCall: suspend () -> Response<Dto>, errorMessage: () -> String ?, map: suspend (Dto) -> T): Result<T> errorApiResult fun <Dto, T> errorApiResult(response: Response<Dto>): Result<T> errorResult fun <T> errorResult(message: String , throwable: Throwable ?): Result<T>","title":"Functions"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.common/call-result/","text":"infrastructure / cz.eman.kaal.infrastructure.common / callResult callResult \u00b6 suspend fun <Dto, T> callResult(responseCall: suspend () -> Response<Dto>, errorMessage: () -> String ?, map: suspend (Dto) -> T): Result<T> Author vsouhrada (vaclav.souhrada@eman.cz) Since 0.4.0","title":"Call result"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.common/call-result/#callresult","text":"suspend fun <Dto, T> callResult(responseCall: suspend () -> Response<Dto>, errorMessage: () -> String ?, map: suspend (Dto) -> T): Result<T> Author vsouhrada (vaclav.souhrada@eman.cz) Since 0.4.0","title":"callResult"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.common/error-api-result/","text":"infrastructure / cz.eman.kaal.infrastructure.common / errorApiResult errorApiResult \u00b6 fun <Dto, T> errorApiResult(response: Response<Dto>): Result<T> Since 0.4.0","title":"Error api result"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.common/error-api-result/#errorapiresult","text":"fun <Dto, T> errorApiResult(response: Response<Dto>): Result<T> Since 0.4.0","title":"errorApiResult"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.common/error-result/","text":"infrastructure / cz.eman.kaal.infrastructure.common / errorResult errorResult \u00b6 fun <T> errorResult(message: String , throwable: Throwable ?): Result<T> Since 0.4.0","title":"Error result"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.common/error-result/#errorresult","text":"fun <T> errorResult(message: String , throwable: Throwable ?): Result<T> Since 0.4.0","title":"errorResult"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/","text":"infrastructure / cz.eman.kaal.infrastructure.coroutines.channels Package cz.eman.kaal.infrastructure.coroutines.channels \u00b6 Types \u00b6 Name Summary LiveDataChannel Class for managing data flow from LiveData to Channel and closing operations class LiveDataChannel<T> : Observer<T?>, LifecycleObserver Extensions for External Classes \u00b6 Name Summary androidx.lifecycle.LiveData","title":"Index"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/#package-czemankaalinfrastructurecoroutineschannels","text":"","title":"Package cz.eman.kaal.infrastructure.coroutines.channels"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/#types","text":"Name Summary LiveDataChannel Class for managing data flow from LiveData to Channel and closing operations class LiveDataChannel<T> : Observer<T?>, LifecycleObserver","title":"Types"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/#extensions-for-external-classes","text":"Name Summary androidx.lifecycle.LiveData","title":"Extensions for External Classes"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/","text":"infrastructure / cz.eman.kaal.infrastructure.coroutines.channels / LiveDataChannel LiveDataChannel \u00b6 class LiveDataChannel<T> : Observer<T?>, LifecycleObserver Class for managing data flow from LiveData to Channel and closing operations Author Roman Holomek <> Constructors \u00b6 Name Summary <init> Class for managing data flow from LiveData to Channel and closing operations LiveDataChannel(liveData: LiveData<T>) Properties \u00b6 Name Summary channel val channel: Channel<T?> Functions \u00b6 Name Summary onChanged fun onChanged(t: T?): Unit onDestroy fun onDestroy(): Unit","title":"Index"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/#livedatachannel","text":"class LiveDataChannel<T> : Observer<T?>, LifecycleObserver Class for managing data flow from LiveData to Channel and closing operations Author Roman Holomek <>","title":"LiveDataChannel"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/#constructors","text":"Name Summary <init> Class for managing data flow from LiveData to Channel and closing operations LiveDataChannel(liveData: LiveData<T>)","title":"Constructors"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/#properties","text":"Name Summary channel val channel: Channel<T?>","title":"Properties"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/#functions","text":"Name Summary onChanged fun onChanged(t: T?): Unit onDestroy fun onDestroy(): Unit","title":"Functions"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/-init-/","text":"infrastructure / cz.eman.kaal.infrastructure.coroutines.channels / LiveDataChannel / <init> <init> \u00b6 LiveDataChannel(liveData: LiveData<T>) Class for managing data flow from LiveData to Channel and closing operations Author Roman Holomek <>","title":" init "},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/-init-/#init","text":"LiveDataChannel(liveData: LiveData<T>) Class for managing data flow from LiveData to Channel and closing operations Author Roman Holomek <>","title":"&lt;init&gt;"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/channel/","text":"infrastructure / cz.eman.kaal.infrastructure.coroutines.channels / LiveDataChannel / channel channel \u00b6 val channel: Channel<T?>","title":"Channel"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/channel/#channel","text":"val channel: Channel<T?>","title":"channel"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/on-changed/","text":"infrastructure / cz.eman.kaal.infrastructure.coroutines.channels / LiveDataChannel / onChanged onChanged \u00b6 fun onChanged(t: T?): Unit","title":"On changed"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/on-changed/#onchanged","text":"fun onChanged(t: T?): Unit","title":"onChanged"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/on-destroy/","text":"infrastructure / cz.eman.kaal.infrastructure.coroutines.channels / LiveDataChannel / onDestroy onDestroy \u00b6 fun onDestroy(): Unit","title":"On destroy"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/on-destroy/#ondestroy","text":"fun onDestroy(): Unit","title":"onDestroy"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/androidx.lifecycle.-live-data/","text":"infrastructure / cz.eman.kaal.infrastructure.coroutines.channels / androidx.lifecycle.LiveData Extensions for androidx.lifecycle.LiveData \u00b6 Name Summary observeChannel Extension functions for converting LiveData to coroutines Channel fun <T> LiveData<T>.observeChannel(lifecycleOwner: LifecycleOwner? = null): Channel<T?>","title":"Index"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/androidx.lifecycle.-live-data/#extensions-for-androidxlifecyclelivedata","text":"Name Summary observeChannel Extension functions for converting LiveData to coroutines Channel fun <T> LiveData<T>.observeChannel(lifecycleOwner: LifecycleOwner? = null): Channel<T?>","title":"Extensions for androidx.lifecycle.LiveData"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/androidx.lifecycle.-live-data/observe-channel/","text":"infrastructure / cz.eman.kaal.infrastructure.coroutines.channels / androidx.lifecycle.LiveData / observeChannel observeChannel \u00b6 fun <T> LiveData<T>.observeChannel(lifecycleOwner: LifecycleOwner? = null): Channel<T?> Extension functions for converting LiveData to coroutines Channel Parameters \u00b6 lifecycleOwner - for managing data flow and closing streams on destroy - NULL value ATTENTION!! Don't forget to close Channel when there is no need for data updates Author Roman Holomek <> Since 1.0.0","title":"Observe channel"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/androidx.lifecycle.-live-data/observe-channel/#observechannel","text":"fun <T> LiveData<T>.observeChannel(lifecycleOwner: LifecycleOwner? = null): Channel<T?> Extension functions for converting LiveData to coroutines Channel","title":"observeChannel"},{"location":"api/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/androidx.lifecycle.-live-data/observe-channel/#parameters","text":"lifecycleOwner - for managing data flow and closing streams on destroy - NULL value ATTENTION!! Don't forget to close Channel when there is no need for data updates Author Roman Holomek <> Since 1.0.0","title":"Parameters"},{"location":"api/presentation/","text":"presentation Packages \u00b6 Name Summary cz.eman.kaal.presentation.activity cz.eman.kaal.presentation.adapter cz.eman.kaal.presentation.adapter.binder cz.eman.kaal.presentation.dialog cz.eman.kaal.presentation.fragment cz.eman.kaal.presentation.fragment.property cz.eman.kaal.presentation.lifecycle cz.eman.kaal.presentation.lifecycle.channels cz.eman.kaal.presentation.util cz.eman.kaal.presentation.view cz.eman.kaal.presentation.viewmodel Index \u00b6 All Types","title":"presentation"},{"location":"api/presentation/#packages","text":"Name Summary cz.eman.kaal.presentation.activity cz.eman.kaal.presentation.adapter cz.eman.kaal.presentation.adapter.binder cz.eman.kaal.presentation.dialog cz.eman.kaal.presentation.fragment cz.eman.kaal.presentation.fragment.property cz.eman.kaal.presentation.lifecycle cz.eman.kaal.presentation.lifecycle.channels cz.eman.kaal.presentation.util cz.eman.kaal.presentation.view cz.eman.kaal.presentation.viewmodel","title":"Packages"},{"location":"api/presentation/#index","text":"All Types","title":"Index"},{"location":"api/presentation/alltypes/","text":"All Types \u00b6 Name Summary cz.eman.kaal.presentation.adapter.BindingRecyclerViewAdapter \u00b6 The common implementation of RecyclerView.Adapter . The implementation supports observing changes on adapter's items. | cz.eman.kaal.presentation.adapter.binder.CompositeItemBinder \u00b6 The implementation of ItemBinder which support multiple types of view items | cz.eman.kaal.presentation.adapter.binder.ConditionalDataBinder \u00b6 The implementation of ItemBinder which adds support for multiple types of view items | cz.eman.kaal.presentation.util.DiffCallback \u00b6 Implementation of DiffUtil.Callback using the DiffUtil.ItemCallback to compare items | cz.eman.kaal.presentation.util.DiffItemCallback \u00b6 Callback for calculating the diff between two non-null items in a list. | cz.eman.kaal.presentation.view.DslTextWatcher \u00b6 A DSL wrapper around the TextWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on. | (extensions in package cz.eman.kaal.presentation.fragment) androidx.fragment.app.Fragment \u00b6 | cz.eman.kaal.presentation.fragment.property.FragmentPropertyDelegate \u00b6 Easier way how to handle fragment's arguments Bundle by using this delegate | cz.eman.kaal.presentation.adapter.binder.ItemBinder \u00b6 The interface declares methods for creating and binding view which represents item f.e. in RecyclerView. | cz.eman.kaal.presentation.adapter.binder.ItemBinderImpl \u00b6 The basic implementation of ItemBinder | cz.eman.kaal.presentation.activity.KaalActivity \u00b6 | cz.eman.kaal.presentation.viewmodel.KaalAndroidViewModel \u00b6 | cz.eman.kaal.presentation.dialog.KaalDialogFragment \u00b6 | cz.eman.kaal.presentation.fragment.KaalFragment \u00b6 | cz.eman.kaal.presentation.viewmodel.KaalViewModel \u00b6 | cz.eman.kaal.presentation.lifecycle.channels.LifecycleEventChannel \u00b6 ReceiveChannel emitting Lifecycle.Event updates | (extensions in package cz.eman.kaal.presentation.lifecycle.channels) androidx.lifecycle.LifecycleOwner \u00b6 | (extensions in package cz.eman.kaal.presentation.lifecycle.channels) kotlinx.coroutines.channels.ReceiveChannel \u00b6 | cz.eman.kaal.presentation.lifecycle.SingleLiveEvent \u00b6 A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages. | (extensions in package cz.eman.kaal.presentation.view) android.widget.TextView \u00b6 | cz.eman.kaal.presentation.adapter.binder.VariableBinder \u00b6 The interface declares methods for binding variable to item view. Use this if you want to bind custom variable into item view. Most common variable being binded is view model. | cz.eman.kaal.presentation.adapter.binder.VariableBinderImpl \u00b6 The implementation of VariableBinder | (extensions in package cz.eman.kaal.presentation.view) android.view.View \u00b6 | (extensions in package cz.eman.kaal.presentation.view) android.view.ViewGroup \u00b6 | (extensions in package cz.eman.kaal.presentation.viewmodel) androidx.lifecycle.ViewModel \u00b6","title":"Index"},{"location":"api/presentation/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"api/presentation/alltypes/#czemankaalpresentationadapterbindingrecyclerviewadapter","text":"The common implementation of RecyclerView.Adapter . The implementation supports observing changes on adapter's items. |","title":"cz.eman.kaal.presentation.adapter.BindingRecyclerViewAdapter"},{"location":"api/presentation/alltypes/#czemankaalpresentationadapterbindercompositeitembinder","text":"The implementation of ItemBinder which support multiple types of view items |","title":"cz.eman.kaal.presentation.adapter.binder.CompositeItemBinder"},{"location":"api/presentation/alltypes/#czemankaalpresentationadapterbinderconditionaldatabinder","text":"The implementation of ItemBinder which adds support for multiple types of view items |","title":"cz.eman.kaal.presentation.adapter.binder.ConditionalDataBinder"},{"location":"api/presentation/alltypes/#czemankaalpresentationutildiffcallback","text":"Implementation of DiffUtil.Callback using the DiffUtil.ItemCallback to compare items |","title":"cz.eman.kaal.presentation.util.DiffCallback"},{"location":"api/presentation/alltypes/#czemankaalpresentationutildiffitemcallback","text":"Callback for calculating the diff between two non-null items in a list. |","title":"cz.eman.kaal.presentation.util.DiffItemCallback"},{"location":"api/presentation/alltypes/#czemankaalpresentationviewdsltextwatcher","text":"A DSL wrapper around the TextWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on. | (extensions in package cz.eman.kaal.presentation.fragment)","title":"cz.eman.kaal.presentation.view.DslTextWatcher"},{"location":"api/presentation/alltypes/#androidxfragmentappfragment","text":"|","title":"androidx.fragment.app.Fragment"},{"location":"api/presentation/alltypes/#czemankaalpresentationfragmentpropertyfragmentpropertydelegate","text":"Easier way how to handle fragment's arguments Bundle by using this delegate |","title":"cz.eman.kaal.presentation.fragment.property.FragmentPropertyDelegate"},{"location":"api/presentation/alltypes/#czemankaalpresentationadapterbinderitembinder","text":"The interface declares methods for creating and binding view which represents item f.e. in RecyclerView. |","title":"cz.eman.kaal.presentation.adapter.binder.ItemBinder"},{"location":"api/presentation/alltypes/#czemankaalpresentationadapterbinderitembinderimpl","text":"The basic implementation of ItemBinder |","title":"cz.eman.kaal.presentation.adapter.binder.ItemBinderImpl"},{"location":"api/presentation/alltypes/#czemankaalpresentationactivitykaalactivity","text":"|","title":"cz.eman.kaal.presentation.activity.KaalActivity"},{"location":"api/presentation/alltypes/#czemankaalpresentationviewmodelkaalandroidviewmodel","text":"|","title":"cz.eman.kaal.presentation.viewmodel.KaalAndroidViewModel"},{"location":"api/presentation/alltypes/#czemankaalpresentationdialogkaaldialogfragment","text":"|","title":"cz.eman.kaal.presentation.dialog.KaalDialogFragment"},{"location":"api/presentation/alltypes/#czemankaalpresentationfragmentkaalfragment","text":"|","title":"cz.eman.kaal.presentation.fragment.KaalFragment"},{"location":"api/presentation/alltypes/#czemankaalpresentationviewmodelkaalviewmodel","text":"|","title":"cz.eman.kaal.presentation.viewmodel.KaalViewModel"},{"location":"api/presentation/alltypes/#czemankaalpresentationlifecyclechannelslifecycleeventchannel","text":"ReceiveChannel emitting Lifecycle.Event updates | (extensions in package cz.eman.kaal.presentation.lifecycle.channels)","title":"cz.eman.kaal.presentation.lifecycle.channels.LifecycleEventChannel"},{"location":"api/presentation/alltypes/#androidxlifecyclelifecycleowner","text":"| (extensions in package cz.eman.kaal.presentation.lifecycle.channels)","title":"androidx.lifecycle.LifecycleOwner"},{"location":"api/presentation/alltypes/#kotlinxcoroutineschannelsreceivechannel","text":"|","title":"kotlinx.coroutines.channels.ReceiveChannel"},{"location":"api/presentation/alltypes/#czemankaalpresentationlifecyclesingleliveevent","text":"A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages. | (extensions in package cz.eman.kaal.presentation.view)","title":"cz.eman.kaal.presentation.lifecycle.SingleLiveEvent"},{"location":"api/presentation/alltypes/#androidwidgettextview","text":"|","title":"android.widget.TextView"},{"location":"api/presentation/alltypes/#czemankaalpresentationadapterbindervariablebinder","text":"The interface declares methods for binding variable to item view. Use this if you want to bind custom variable into item view. Most common variable being binded is view model. |","title":"cz.eman.kaal.presentation.adapter.binder.VariableBinder"},{"location":"api/presentation/alltypes/#czemankaalpresentationadapterbindervariablebinderimpl","text":"The implementation of VariableBinder | (extensions in package cz.eman.kaal.presentation.view)","title":"cz.eman.kaal.presentation.adapter.binder.VariableBinderImpl"},{"location":"api/presentation/alltypes/#androidviewview","text":"| (extensions in package cz.eman.kaal.presentation.view)","title":"android.view.View"},{"location":"api/presentation/alltypes/#androidviewviewgroup","text":"| (extensions in package cz.eman.kaal.presentation.viewmodel)","title":"android.view.ViewGroup"},{"location":"api/presentation/alltypes/#androidxlifecycleviewmodel","text":"","title":"androidx.lifecycle.ViewModel"},{"location":"api/presentation/cz.eman.kaal.presentation.activity/","text":"presentation / cz.eman.kaal.presentation.activity Package cz.eman.kaal.presentation.activity \u00b6 Types \u00b6 Name Summary KaalActivity abstract class KaalActivity : AppCompatActivity","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.activity/#package-czemankaalpresentationactivity","text":"","title":"Package cz.eman.kaal.presentation.activity"},{"location":"api/presentation/cz.eman.kaal.presentation.activity/#types","text":"Name Summary KaalActivity abstract class KaalActivity : AppCompatActivity","title":"Types"},{"location":"api/presentation/cz.eman.kaal.presentation.activity/-kaal-activity/","text":"presentation / cz.eman.kaal.presentation.activity / KaalActivity KaalActivity \u00b6 abstract class KaalActivity : AppCompatActivity Author eMan s.r.o. See Also AppCompatActivity Since 0.1.0 Constructors \u00b6 Name Summary <init> KaalActivity(contentLayoutId: Int = 0)","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.activity/-kaal-activity/#kaalactivity","text":"abstract class KaalActivity : AppCompatActivity Author eMan s.r.o. See Also AppCompatActivity Since 0.1.0","title":"KaalActivity"},{"location":"api/presentation/cz.eman.kaal.presentation.activity/-kaal-activity/#constructors","text":"Name Summary <init> KaalActivity(contentLayoutId: Int = 0)","title":"Constructors"},{"location":"api/presentation/cz.eman.kaal.presentation.activity/-kaal-activity/-init-/","text":"presentation / cz.eman.kaal.presentation.activity / KaalActivity / <init> <init> \u00b6 KaalActivity(@LayoutRes contentLayoutId: Int = 0) Author eMan s.r.o. See Also AppCompatActivity Since 0.1.0","title":" init "},{"location":"api/presentation/cz.eman.kaal.presentation.activity/-kaal-activity/-init-/#init","text":"KaalActivity(@LayoutRes contentLayoutId: Int = 0) Author eMan s.r.o. See Also AppCompatActivity Since 0.1.0","title":"&lt;init&gt;"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/","text":"presentation / cz.eman.kaal.presentation.adapter Package cz.eman.kaal.presentation.adapter \u00b6 Types \u00b6 Name Summary BindingRecyclerViewAdapter The common implementation of RecyclerView.Adapter . The implementation supports observing changes on adapter's items. class BindingRecyclerViewAdapter<T : Any > : Adapter<ViewHolder>, OnClickListener , OnLongClickListener Functions \u00b6 Name Summary bindRecyclerView Binds adapter to RecyclerView using BindingRecyclerViewAdapter . Parameters are used to create this adapter and support item clicks, differences and other options. If the adapter already exists it only changes item list in the adapter, which happens with Observable or LiveData items. fun <T : Any > bindRecyclerView(recyclerView: RecyclerView, items: Collection <T>?, binder: ItemBinder <T>?, variables: Array < VariableBinder <T>>?, clickListener: (( View , T) -> Unit )?, longClickListener: (( View , T) -> Unit )?, differ: ItemCallback<T>?, limit: Int ?): Unit bindViewPager2 Binds adapter to ViewPager2 using BindingRecyclerViewAdapter . Parameters are used to create this adapter and support item clicks, differences and other options. If the adapter already exists it only changes item list in the adapter, which happens with Observable or LiveData items. fun <T : Any > bindViewPager2(viewPager: ViewPager2, items: Collection <T>?, binder: ItemBinder <T>?, variables: Array < VariableBinder <T>>?, clickListener: (( View , T) -> Unit )?, longClickListener: (( View , T) -> Unit )?, differ: ItemCallback<T>?): Unit","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/#package-czemankaalpresentationadapter","text":"","title":"Package cz.eman.kaal.presentation.adapter"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/#types","text":"Name Summary BindingRecyclerViewAdapter The common implementation of RecyclerView.Adapter . The implementation supports observing changes on adapter's items. class BindingRecyclerViewAdapter<T : Any > : Adapter<ViewHolder>, OnClickListener , OnLongClickListener","title":"Types"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/#functions","text":"Name Summary bindRecyclerView Binds adapter to RecyclerView using BindingRecyclerViewAdapter . Parameters are used to create this adapter and support item clicks, differences and other options. If the adapter already exists it only changes item list in the adapter, which happens with Observable or LiveData items. fun <T : Any > bindRecyclerView(recyclerView: RecyclerView, items: Collection <T>?, binder: ItemBinder <T>?, variables: Array < VariableBinder <T>>?, clickListener: (( View , T) -> Unit )?, longClickListener: (( View , T) -> Unit )?, differ: ItemCallback<T>?, limit: Int ?): Unit bindViewPager2 Binds adapter to ViewPager2 using BindingRecyclerViewAdapter . Parameters are used to create this adapter and support item clicks, differences and other options. If the adapter already exists it only changes item list in the adapter, which happens with Observable or LiveData items. fun <T : Any > bindViewPager2(viewPager: ViewPager2, items: Collection <T>?, binder: ItemBinder <T>?, variables: Array < VariableBinder <T>>?, clickListener: (( View , T) -> Unit )?, longClickListener: (( View , T) -> Unit )?, differ: ItemCallback<T>?): Unit","title":"Functions"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/bind-recycler-view/","text":"presentation / cz.eman.kaal.presentation.adapter / bindRecyclerView bindRecyclerView \u00b6 fun <T : Any > bindRecyclerView(recyclerView: RecyclerView, items: Collection <T>?, binder: ItemBinder <T>?, variables: Array < VariableBinder <T>>?, clickListener: (( View , T) -> Unit )?, longClickListener: (( View , T) -> Unit )?, differ: ItemCallback<T>?, limit: Int ?): Unit Binds adapter to RecyclerView using BindingRecyclerViewAdapter . Parameters are used to create this adapter and support item clicks, differences and other options. If the adapter already exists it only changes item list in the adapter, which happens with Observable or LiveData items. Author eMan s.r.o. Since 0.8.0","title":"Bind recycler view"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/bind-recycler-view/#bindrecyclerview","text":"fun <T : Any > bindRecyclerView(recyclerView: RecyclerView, items: Collection <T>?, binder: ItemBinder <T>?, variables: Array < VariableBinder <T>>?, clickListener: (( View , T) -> Unit )?, longClickListener: (( View , T) -> Unit )?, differ: ItemCallback<T>?, limit: Int ?): Unit Binds adapter to RecyclerView using BindingRecyclerViewAdapter . Parameters are used to create this adapter and support item clicks, differences and other options. If the adapter already exists it only changes item list in the adapter, which happens with Observable or LiveData items. Author eMan s.r.o. Since 0.8.0","title":"bindRecyclerView"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/bind-view-pager2/","text":"presentation / cz.eman.kaal.presentation.adapter / bindViewPager2 bindViewPager2 \u00b6 fun <T : Any > bindViewPager2(viewPager: ViewPager2, items: Collection <T>?, binder: ItemBinder <T>?, variables: Array < VariableBinder <T>>?, clickListener: (( View , T) -> Unit )?, longClickListener: (( View , T) -> Unit )?, differ: ItemCallback<T>?): Unit Binds adapter to ViewPager2 using BindingRecyclerViewAdapter . Parameters are used to create this adapter and support item clicks, differences and other options. If the adapter already exists it only changes item list in the adapter, which happens with Observable or LiveData items. Author eMan s.r.o. Since 0.8.0","title":"Bind view pager2"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/bind-view-pager2/#bindviewpager2","text":"fun <T : Any > bindViewPager2(viewPager: ViewPager2, items: Collection <T>?, binder: ItemBinder <T>?, variables: Array < VariableBinder <T>>?, clickListener: (( View , T) -> Unit )?, longClickListener: (( View , T) -> Unit )?, differ: ItemCallback<T>?): Unit Binds adapter to ViewPager2 using BindingRecyclerViewAdapter . Parameters are used to create this adapter and support item clicks, differences and other options. If the adapter already exists it only changes item list in the adapter, which happens with Observable or LiveData items. Author eMan s.r.o. Since 0.8.0","title":"bindViewPager2"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/","text":"presentation / cz.eman.kaal.presentation.adapter / BindingRecyclerViewAdapter BindingRecyclerViewAdapter \u00b6 class BindingRecyclerViewAdapter<T : Any > : Adapter<ViewHolder>, OnClickListener , OnLongClickListener The common implementation of RecyclerView.Adapter . The implementation supports observing changes on adapter's items. The click listeners are registered only if the item view support the click action ( android.R.attr.clickable , ( android.R.attr.longClickable ). Author eMan s.r.o. Author Radek Piekarz Since 0.8.0 Types \u00b6 Name Summary ViewHolder class ViewHolder : ViewHolder, LifecycleOwner Constructors \u00b6 Name Summary <init> The common implementation of RecyclerView.Adapter . The implementation supports observing changes on adapter's items. BindingRecyclerViewAdapter(items: Collection <T>? = null, itemBinder: ItemBinder <T>, itemClickListener: (( View , T) -> Unit )? = null, itemLongClickListener: (( View , T) -> Unit )? = null, variableBinders: Array < VariableBinder <T>>? = null, differ: ItemCallback<T>? = null, limit: Int ? = null) Properties \u00b6 Name Summary items var items: ObservableList<T>? Functions \u00b6 Name Summary getItemCount fun getItemCount(): Int getItemViewType fun getItemViewType(position: Int ): Int onBindViewHolder fun onBindViewHolder(viewHolder: ViewHolder, position: Int ): Unit onClick fun onClick(v: View ): Unit onCreateViewHolder fun onCreateViewHolder(viewGroup: ViewGroup , layoutId: Int ): ViewHolder onDetachedFromRecyclerView fun onDetachedFromRecyclerView(recyclerView: RecyclerView): Unit onLongClick fun onLongClick(v: View ): Boolean onViewAttachedToWindow fun onViewAttachedToWindow(holder: ViewHolder): Unit onViewDetachedFromWindow fun onViewDetachedFromWindow(holder: ViewHolder): Unit setItems fun setItems(items: Collection <T>?): Unit","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/#bindingrecyclerviewadapter","text":"class BindingRecyclerViewAdapter<T : Any > : Adapter<ViewHolder>, OnClickListener , OnLongClickListener The common implementation of RecyclerView.Adapter . The implementation supports observing changes on adapter's items. The click listeners are registered only if the item view support the click action ( android.R.attr.clickable , ( android.R.attr.longClickable ). Author eMan s.r.o. Author Radek Piekarz Since 0.8.0","title":"BindingRecyclerViewAdapter"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/#types","text":"Name Summary ViewHolder class ViewHolder : ViewHolder, LifecycleOwner","title":"Types"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/#constructors","text":"Name Summary <init> The common implementation of RecyclerView.Adapter . The implementation supports observing changes on adapter's items. BindingRecyclerViewAdapter(items: Collection <T>? = null, itemBinder: ItemBinder <T>, itemClickListener: (( View , T) -> Unit )? = null, itemLongClickListener: (( View , T) -> Unit )? = null, variableBinders: Array < VariableBinder <T>>? = null, differ: ItemCallback<T>? = null, limit: Int ? = null)","title":"Constructors"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/#properties","text":"Name Summary items var items: ObservableList<T>?","title":"Properties"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/#functions","text":"Name Summary getItemCount fun getItemCount(): Int getItemViewType fun getItemViewType(position: Int ): Int onBindViewHolder fun onBindViewHolder(viewHolder: ViewHolder, position: Int ): Unit onClick fun onClick(v: View ): Unit onCreateViewHolder fun onCreateViewHolder(viewGroup: ViewGroup , layoutId: Int ): ViewHolder onDetachedFromRecyclerView fun onDetachedFromRecyclerView(recyclerView: RecyclerView): Unit onLongClick fun onLongClick(v: View ): Boolean onViewAttachedToWindow fun onViewAttachedToWindow(holder: ViewHolder): Unit onViewDetachedFromWindow fun onViewDetachedFromWindow(holder: ViewHolder): Unit setItems fun setItems(items: Collection <T>?): Unit","title":"Functions"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/-init-/","text":"presentation / cz.eman.kaal.presentation.adapter / BindingRecyclerViewAdapter / <init> <init> \u00b6 BindingRecyclerViewAdapter(items: Collection <T>? = null, itemBinder: ItemBinder <T>, itemClickListener: (( View , T) -> Unit )? = null, itemLongClickListener: (( View , T) -> Unit )? = null, variableBinders: Array < VariableBinder <T>>? = null, differ: ItemCallback<T>? = null, limit: Int ? = null) The common implementation of RecyclerView.Adapter . The implementation supports observing changes on adapter's items. The click listeners are registered only if the item view support the click action ( android.R.attr.clickable , ( android.R.attr.longClickable ). Author eMan s.r.o. Author Radek Piekarz Since 0.8.0","title":" init "},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/-init-/#init","text":"BindingRecyclerViewAdapter(items: Collection <T>? = null, itemBinder: ItemBinder <T>, itemClickListener: (( View , T) -> Unit )? = null, itemLongClickListener: (( View , T) -> Unit )? = null, variableBinders: Array < VariableBinder <T>>? = null, differ: ItemCallback<T>? = null, limit: Int ? = null) The common implementation of RecyclerView.Adapter . The implementation supports observing changes on adapter's items. The click listeners are registered only if the item view support the click action ( android.R.attr.clickable , ( android.R.attr.longClickable ). Author eMan s.r.o. Author Radek Piekarz Since 0.8.0","title":"&lt;init&gt;"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/get-item-count/","text":"presentation / cz.eman.kaal.presentation.adapter / BindingRecyclerViewAdapter / getItemCount getItemCount \u00b6 fun getItemCount(): Int","title":"Get item count"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/get-item-count/#getitemcount","text":"fun getItemCount(): Int","title":"getItemCount"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/get-item-view-type/","text":"presentation / cz.eman.kaal.presentation.adapter / BindingRecyclerViewAdapter / getItemViewType getItemViewType \u00b6 @LayoutRes fun getItemViewType(position: Int ): Int","title":"Get item view type"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/get-item-view-type/#getitemviewtype","text":"@LayoutRes fun getItemViewType(position: Int ): Int","title":"getItemViewType"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/items/","text":"presentation / cz.eman.kaal.presentation.adapter / BindingRecyclerViewAdapter / items items \u00b6 var items: ObservableList<T>?","title":"Items"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/items/#items","text":"var items: ObservableList<T>?","title":"items"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/on-bind-view-holder/","text":"presentation / cz.eman.kaal.presentation.adapter / BindingRecyclerViewAdapter / onBindViewHolder onBindViewHolder \u00b6 fun onBindViewHolder(viewHolder: ViewHolder, position: Int ): Unit","title":"On bind view holder"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/on-bind-view-holder/#onbindviewholder","text":"fun onBindViewHolder(viewHolder: ViewHolder, position: Int ): Unit","title":"onBindViewHolder"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/on-click/","text":"presentation / cz.eman.kaal.presentation.adapter / BindingRecyclerViewAdapter / onClick onClick \u00b6 fun onClick(v: View ): Unit","title":"On click"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/on-click/#onclick","text":"fun onClick(v: View ): Unit","title":"onClick"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/on-create-view-holder/","text":"presentation / cz.eman.kaal.presentation.adapter / BindingRecyclerViewAdapter / onCreateViewHolder onCreateViewHolder \u00b6 fun onCreateViewHolder(viewGroup: ViewGroup , @LayoutRes layoutId: Int ): ViewHolder","title":"On create view holder"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/on-create-view-holder/#oncreateviewholder","text":"fun onCreateViewHolder(viewGroup: ViewGroup , @LayoutRes layoutId: Int ): ViewHolder","title":"onCreateViewHolder"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/on-detached-from-recycler-view/","text":"presentation / cz.eman.kaal.presentation.adapter / BindingRecyclerViewAdapter / onDetachedFromRecyclerView onDetachedFromRecyclerView \u00b6 fun onDetachedFromRecyclerView(recyclerView: RecyclerView): Unit","title":"On detached from recycler view"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/on-detached-from-recycler-view/#ondetachedfromrecyclerview","text":"fun onDetachedFromRecyclerView(recyclerView: RecyclerView): Unit","title":"onDetachedFromRecyclerView"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/on-long-click/","text":"presentation / cz.eman.kaal.presentation.adapter / BindingRecyclerViewAdapter / onLongClick onLongClick \u00b6 fun onLongClick(v: View ): Boolean","title":"On long click"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/on-long-click/#onlongclick","text":"fun onLongClick(v: View ): Boolean","title":"onLongClick"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/on-view-attached-to-window/","text":"presentation / cz.eman.kaal.presentation.adapter / BindingRecyclerViewAdapter / onViewAttachedToWindow onViewAttachedToWindow \u00b6 fun onViewAttachedToWindow(holder: ViewHolder): Unit","title":"On view attached to window"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/on-view-attached-to-window/#onviewattachedtowindow","text":"fun onViewAttachedToWindow(holder: ViewHolder): Unit","title":"onViewAttachedToWindow"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/on-view-detached-from-window/","text":"presentation / cz.eman.kaal.presentation.adapter / BindingRecyclerViewAdapter / onViewDetachedFromWindow onViewDetachedFromWindow \u00b6 fun onViewDetachedFromWindow(holder: ViewHolder): Unit","title":"On view detached from window"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/on-view-detached-from-window/#onviewdetachedfromwindow","text":"fun onViewDetachedFromWindow(holder: ViewHolder): Unit","title":"onViewDetachedFromWindow"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/set-items/","text":"presentation / cz.eman.kaal.presentation.adapter / BindingRecyclerViewAdapter / setItems setItems \u00b6 fun setItems(items: Collection <T>?): Unit","title":"Set items"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/set-items/#setitems","text":"fun setItems(items: Collection <T>?): Unit","title":"setItems"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/-view-holder/","text":"presentation / cz.eman.kaal.presentation.adapter / BindingRecyclerViewAdapter / ViewHolder ViewHolder \u00b6 class ViewHolder : ViewHolder, LifecycleOwner Constructors \u00b6 Name Summary <init> ViewHolder(binding: ViewDataBinding) Properties \u00b6 Name Summary binding val binding: ViewDataBinding Functions \u00b6 Name Summary getLifecycle fun getLifecycle(): Lifecycle onStart fun onStart(): Unit onStop fun onStop(): Unit","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/-view-holder/#viewholder","text":"class ViewHolder : ViewHolder, LifecycleOwner","title":"ViewHolder"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/-view-holder/#constructors","text":"Name Summary <init> ViewHolder(binding: ViewDataBinding)","title":"Constructors"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/-view-holder/#properties","text":"Name Summary binding val binding: ViewDataBinding","title":"Properties"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/-view-holder/#functions","text":"Name Summary getLifecycle fun getLifecycle(): Lifecycle onStart fun onStart(): Unit onStop fun onStop(): Unit","title":"Functions"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/-view-holder/-init-/","text":"presentation / cz.eman.kaal.presentation.adapter / BindingRecyclerViewAdapter / ViewHolder / <init> <init> \u00b6 ViewHolder(binding: ViewDataBinding)","title":" init "},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/-view-holder/-init-/#init","text":"ViewHolder(binding: ViewDataBinding)","title":"&lt;init&gt;"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/-view-holder/binding/","text":"presentation / cz.eman.kaal.presentation.adapter / BindingRecyclerViewAdapter / ViewHolder / binding binding \u00b6 val binding: ViewDataBinding","title":"Binding"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/-view-holder/binding/#binding","text":"val binding: ViewDataBinding","title":"binding"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/-view-holder/get-lifecycle/","text":"presentation / cz.eman.kaal.presentation.adapter / BindingRecyclerViewAdapter / ViewHolder / getLifecycle getLifecycle \u00b6 fun getLifecycle(): Lifecycle","title":"Get lifecycle"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/-view-holder/get-lifecycle/#getlifecycle","text":"fun getLifecycle(): Lifecycle","title":"getLifecycle"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/-view-holder/on-start/","text":"presentation / cz.eman.kaal.presentation.adapter / BindingRecyclerViewAdapter / ViewHolder / onStart onStart \u00b6 fun onStart(): Unit","title":"On start"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/-view-holder/on-start/#onstart","text":"fun onStart(): Unit","title":"onStart"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/-view-holder/on-stop/","text":"presentation / cz.eman.kaal.presentation.adapter / BindingRecyclerViewAdapter / ViewHolder / onStop onStop \u00b6 fun onStop(): Unit","title":"On stop"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter/-binding-recycler-view-adapter/-view-holder/on-stop/#onstop","text":"fun onStop(): Unit","title":"onStop"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/","text":"presentation / cz.eman.kaal.presentation.adapter.binder Package cz.eman.kaal.presentation.adapter.binder \u00b6 Types \u00b6 Name Summary CompositeItemBinder The implementation of ItemBinder which support multiple types of view items class CompositeItemBinder<in T : Any > : ItemBinder <T> ConditionalDataBinder The implementation of ItemBinder which adds support for multiple types of view items abstract class ConditionalDataBinder<in T : Any > : ItemBinderImpl <T> ItemBinder The interface declares methods for creating and binding view which represents item f.e. in RecyclerView. interface ItemBinder<in T : Any > ItemBinderImpl The basic implementation of ItemBinder open class ItemBinderImpl<in T : Any > : ItemBinder <T> VariableBinder The interface declares methods for binding variable to item view. Use this if you want to bind custom variable into item view. Most common variable being binded is view model. interface VariableBinder<in T : Any > VariableBinderImpl The implementation of VariableBinder data class VariableBinderImpl<in T : Any > : VariableBinder <T>","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/#package-czemankaalpresentationadapterbinder","text":"","title":"Package cz.eman.kaal.presentation.adapter.binder"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/#types","text":"Name Summary CompositeItemBinder The implementation of ItemBinder which support multiple types of view items class CompositeItemBinder<in T : Any > : ItemBinder <T> ConditionalDataBinder The implementation of ItemBinder which adds support for multiple types of view items abstract class ConditionalDataBinder<in T : Any > : ItemBinderImpl <T> ItemBinder The interface declares methods for creating and binding view which represents item f.e. in RecyclerView. interface ItemBinder<in T : Any > ItemBinderImpl The basic implementation of ItemBinder open class ItemBinderImpl<in T : Any > : ItemBinder <T> VariableBinder The interface declares methods for binding variable to item view. Use this if you want to bind custom variable into item view. Most common variable being binded is view model. interface VariableBinder<in T : Any > VariableBinderImpl The implementation of VariableBinder data class VariableBinderImpl<in T : Any > : VariableBinder <T>","title":"Types"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-composite-item-binder/","text":"presentation / cz.eman.kaal.presentation.adapter.binder / CompositeItemBinder CompositeItemBinder \u00b6 class CompositeItemBinder<in T : Any > : ItemBinder <T> The implementation of ItemBinder which support multiple types of view items Author eMan s.r.o. Author Radek Piekarz Since 0.8.0 Constructors \u00b6 Name Summary <init> The implementation of ItemBinder which support multiple types of view items CompositeItemBinder(vararg conditionalDataBinders: ConditionalDataBinder <T>) Functions \u00b6 Name Summary getBindingVariable Gets the variable id representing variable in view. For example it can be BR.item. fun getBindingVariable(itemModel: T): Int getLayoutRes Actual value that will be set into the variable in the view. Sets it into specified variable defined using getBindingVariable function. fun getLayoutRes(itemModel: T): Int","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-composite-item-binder/#compositeitembinder","text":"class CompositeItemBinder<in T : Any > : ItemBinder <T> The implementation of ItemBinder which support multiple types of view items Author eMan s.r.o. Author Radek Piekarz Since 0.8.0","title":"CompositeItemBinder"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-composite-item-binder/#constructors","text":"Name Summary <init> The implementation of ItemBinder which support multiple types of view items CompositeItemBinder(vararg conditionalDataBinders: ConditionalDataBinder <T>)","title":"Constructors"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-composite-item-binder/#functions","text":"Name Summary getBindingVariable Gets the variable id representing variable in view. For example it can be BR.item. fun getBindingVariable(itemModel: T): Int getLayoutRes Actual value that will be set into the variable in the view. Sets it into specified variable defined using getBindingVariable function. fun getLayoutRes(itemModel: T): Int","title":"Functions"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-composite-item-binder/-init-/","text":"presentation / cz.eman.kaal.presentation.adapter.binder / CompositeItemBinder / <init> <init> \u00b6 CompositeItemBinder(vararg conditionalDataBinders: ConditionalDataBinder <T>) The implementation of ItemBinder which support multiple types of view items Author eMan s.r.o. Author Radek Piekarz Since 0.8.0","title":" init "},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-composite-item-binder/-init-/#init","text":"CompositeItemBinder(vararg conditionalDataBinders: ConditionalDataBinder <T>) The implementation of ItemBinder which support multiple types of view items Author eMan s.r.o. Author Radek Piekarz Since 0.8.0","title":"&lt;init&gt;"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-composite-item-binder/get-binding-variable/","text":"presentation / cz.eman.kaal.presentation.adapter.binder / CompositeItemBinder / getBindingVariable getBindingVariable \u00b6 fun getBindingVariable(itemModel: T): Int Gets the variable id representing variable in view. For example it can be BR.item. Parameters \u00b6 itemModel - Model of item Return Integer which represents variable in binding layout","title":"Get binding variable"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-composite-item-binder/get-binding-variable/#getbindingvariable","text":"fun getBindingVariable(itemModel: T): Int Gets the variable id representing variable in view. For example it can be BR.item.","title":"getBindingVariable"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-composite-item-binder/get-binding-variable/#parameters","text":"itemModel - Model of item Return Integer which represents variable in binding layout","title":"Parameters"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-composite-item-binder/get-layout-res/","text":"presentation / cz.eman.kaal.presentation.adapter.binder / CompositeItemBinder / getLayoutRes getLayoutRes \u00b6 fun getLayoutRes(itemModel: T): Int Actual value that will be set into the variable in the view. Sets it into specified variable defined using getBindingVariable function. Parameters \u00b6 itemModel - Model of item Return Layout resource ID which represents view for itemModel","title":"Get layout res"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-composite-item-binder/get-layout-res/#getlayoutres","text":"fun getLayoutRes(itemModel: T): Int Actual value that will be set into the variable in the view. Sets it into specified variable defined using getBindingVariable function.","title":"getLayoutRes"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-composite-item-binder/get-layout-res/#parameters","text":"itemModel - Model of item Return Layout resource ID which represents view for itemModel","title":"Parameters"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-conditional-data-binder/","text":"presentation / cz.eman.kaal.presentation.adapter.binder / ConditionalDataBinder ConditionalDataBinder \u00b6 abstract class ConditionalDataBinder<in T : Any > : ItemBinderImpl <T> The implementation of ItemBinder which adds support for multiple types of view items Author eMan s.r.o. Author Radek Piekarz Since 0.8.0 Constructors \u00b6 Name Summary <init> The implementation of ItemBinder which adds support for multiple types of view items ConditionalDataBinder(bindingVariable: Int , layoutId: Int ) Functions \u00b6 Name Summary canHandle Check if this can be used for creating and binding view for itemModel . Can be for example itemModel is Model and second binder can be itemModel is Model2 . abstract fun canHandle(itemModel: T): Boolean","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-conditional-data-binder/#conditionaldatabinder","text":"abstract class ConditionalDataBinder<in T : Any > : ItemBinderImpl <T> The implementation of ItemBinder which adds support for multiple types of view items Author eMan s.r.o. Author Radek Piekarz Since 0.8.0","title":"ConditionalDataBinder"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-conditional-data-binder/#constructors","text":"Name Summary <init> The implementation of ItemBinder which adds support for multiple types of view items ConditionalDataBinder(bindingVariable: Int , layoutId: Int )","title":"Constructors"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-conditional-data-binder/#functions","text":"Name Summary canHandle Check if this can be used for creating and binding view for itemModel . Can be for example itemModel is Model and second binder can be itemModel is Model2 . abstract fun canHandle(itemModel: T): Boolean","title":"Functions"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-conditional-data-binder/-init-/","text":"presentation / cz.eman.kaal.presentation.adapter.binder / ConditionalDataBinder / <init> <init> \u00b6 ConditionalDataBinder(bindingVariable: Int , @LayoutRes layoutId: Int ) The implementation of ItemBinder which adds support for multiple types of view items Author eMan s.r.o. Author Radek Piekarz Since 0.8.0","title":" init "},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-conditional-data-binder/-init-/#init","text":"ConditionalDataBinder(bindingVariable: Int , @LayoutRes layoutId: Int ) The implementation of ItemBinder which adds support for multiple types of view items Author eMan s.r.o. Author Radek Piekarz Since 0.8.0","title":"&lt;init&gt;"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-conditional-data-binder/can-handle/","text":"presentation / cz.eman.kaal.presentation.adapter.binder / ConditionalDataBinder / canHandle canHandle \u00b6 abstract fun canHandle(itemModel: T): Boolean Check if this can be used for creating and binding view for itemModel . Can be for example itemModel is Model and second binder can be itemModel is Model2 . Parameters \u00b6 itemModel - Model of item Return true if this can be used for creating and binding view for itemModel otherwise false","title":"Can handle"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-conditional-data-binder/can-handle/#canhandle","text":"abstract fun canHandle(itemModel: T): Boolean Check if this can be used for creating and binding view for itemModel . Can be for example itemModel is Model and second binder can be itemModel is Model2 .","title":"canHandle"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-conditional-data-binder/can-handle/#parameters","text":"itemModel - Model of item Return true if this can be used for creating and binding view for itemModel otherwise false","title":"Parameters"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder/","text":"presentation / cz.eman.kaal.presentation.adapter.binder / ItemBinder ItemBinder \u00b6 interface ItemBinder<in T : Any > The interface declares methods for creating and binding view which represents item f.e. in RecyclerView. Parameters \u00b6 T - Type of binding item model Author eMan s.r.o. Author Radek Piekarz Since 0.8.0 Functions \u00b6 Name Summary getBindingVariable Gets the variable id representing variable in view. For example it can be BR.item. abstract fun getBindingVariable(itemModel: T): Int getLayoutRes Actual value that will be set into the variable in the view. Sets it into specified variable defined using getBindingVariable function. abstract fun getLayoutRes(itemModel: T): Int Inheritors \u00b6 Name Summary CompositeItemBinder The implementation of ItemBinder which support multiple types of view items class CompositeItemBinder<in T : Any > : ItemBinder <T> ItemBinderImpl The basic implementation of ItemBinder open class ItemBinderImpl<in T : Any > : ItemBinder <T>","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder/#itembinder","text":"interface ItemBinder<in T : Any > The interface declares methods for creating and binding view which represents item f.e. in RecyclerView.","title":"ItemBinder"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder/#parameters","text":"T - Type of binding item model Author eMan s.r.o. Author Radek Piekarz Since 0.8.0","title":"Parameters"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder/#functions","text":"Name Summary getBindingVariable Gets the variable id representing variable in view. For example it can be BR.item. abstract fun getBindingVariable(itemModel: T): Int getLayoutRes Actual value that will be set into the variable in the view. Sets it into specified variable defined using getBindingVariable function. abstract fun getLayoutRes(itemModel: T): Int","title":"Functions"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder/#inheritors","text":"Name Summary CompositeItemBinder The implementation of ItemBinder which support multiple types of view items class CompositeItemBinder<in T : Any > : ItemBinder <T> ItemBinderImpl The basic implementation of ItemBinder open class ItemBinderImpl<in T : Any > : ItemBinder <T>","title":"Inheritors"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder/get-binding-variable/","text":"presentation / cz.eman.kaal.presentation.adapter.binder / ItemBinder / getBindingVariable getBindingVariable \u00b6 abstract fun getBindingVariable(itemModel: T): Int Gets the variable id representing variable in view. For example it can be BR.item. Parameters \u00b6 itemModel - Model of item Return Integer which represents variable in binding layout","title":"Get binding variable"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder/get-binding-variable/#getbindingvariable","text":"abstract fun getBindingVariable(itemModel: T): Int Gets the variable id representing variable in view. For example it can be BR.item.","title":"getBindingVariable"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder/get-binding-variable/#parameters","text":"itemModel - Model of item Return Integer which represents variable in binding layout","title":"Parameters"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder/get-layout-res/","text":"presentation / cz.eman.kaal.presentation.adapter.binder / ItemBinder / getLayoutRes getLayoutRes \u00b6 @LayoutRes abstract fun getLayoutRes(itemModel: T): Int Actual value that will be set into the variable in the view. Sets it into specified variable defined using getBindingVariable function. Parameters \u00b6 itemModel - Model of item Return Layout resource ID which represents view for itemModel","title":"Get layout res"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder/get-layout-res/#getlayoutres","text":"@LayoutRes abstract fun getLayoutRes(itemModel: T): Int Actual value that will be set into the variable in the view. Sets it into specified variable defined using getBindingVariable function.","title":"getLayoutRes"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder/get-layout-res/#parameters","text":"itemModel - Model of item Return Layout resource ID which represents view for itemModel","title":"Parameters"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder-impl/","text":"presentation / cz.eman.kaal.presentation.adapter.binder / ItemBinderImpl ItemBinderImpl \u00b6 open class ItemBinderImpl<in T : Any > : ItemBinder <T> The basic implementation of ItemBinder Author eMan s.r.o. Author Radek Piekarz Since 0.8.0 Constructors \u00b6 Name Summary <init> The basic implementation of ItemBinder ItemBinderImpl(bindingVariable: Int , layoutId: Int ) Functions \u00b6 Name Summary getBindingVariable Gets the variable id representing variable in view. For example it can be BR.item. open fun getBindingVariable(itemModel: T): Int getLayoutRes Actual value that will be set into the variable in the view. Sets it into specified variable defined using getBindingVariable function. open fun getLayoutRes(itemModel: T): Int Inheritors \u00b6 Name Summary ConditionalDataBinder The implementation of ItemBinder which adds support for multiple types of view items abstract class ConditionalDataBinder<in T : Any > : ItemBinderImpl <T>","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder-impl/#itembinderimpl","text":"open class ItemBinderImpl<in T : Any > : ItemBinder <T> The basic implementation of ItemBinder Author eMan s.r.o. Author Radek Piekarz Since 0.8.0","title":"ItemBinderImpl"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder-impl/#constructors","text":"Name Summary <init> The basic implementation of ItemBinder ItemBinderImpl(bindingVariable: Int , layoutId: Int )","title":"Constructors"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder-impl/#functions","text":"Name Summary getBindingVariable Gets the variable id representing variable in view. For example it can be BR.item. open fun getBindingVariable(itemModel: T): Int getLayoutRes Actual value that will be set into the variable in the view. Sets it into specified variable defined using getBindingVariable function. open fun getLayoutRes(itemModel: T): Int","title":"Functions"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder-impl/#inheritors","text":"Name Summary ConditionalDataBinder The implementation of ItemBinder which adds support for multiple types of view items abstract class ConditionalDataBinder<in T : Any > : ItemBinderImpl <T>","title":"Inheritors"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder-impl/-init-/","text":"presentation / cz.eman.kaal.presentation.adapter.binder / ItemBinderImpl / <init> <init> \u00b6 ItemBinderImpl(bindingVariable: Int , @LayoutRes layoutId: Int ) The basic implementation of ItemBinder Author eMan s.r.o. Author Radek Piekarz Since 0.8.0","title":" init "},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder-impl/-init-/#init","text":"ItemBinderImpl(bindingVariable: Int , @LayoutRes layoutId: Int ) The basic implementation of ItemBinder Author eMan s.r.o. Author Radek Piekarz Since 0.8.0","title":"&lt;init&gt;"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder-impl/get-binding-variable/","text":"presentation / cz.eman.kaal.presentation.adapter.binder / ItemBinderImpl / getBindingVariable getBindingVariable \u00b6 open fun getBindingVariable(itemModel: T): Int Gets the variable id representing variable in view. For example it can be BR.item. Parameters \u00b6 itemModel - Model of item Return Integer which represents variable in binding layout","title":"Get binding variable"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder-impl/get-binding-variable/#getbindingvariable","text":"open fun getBindingVariable(itemModel: T): Int Gets the variable id representing variable in view. For example it can be BR.item.","title":"getBindingVariable"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder-impl/get-binding-variable/#parameters","text":"itemModel - Model of item Return Integer which represents variable in binding layout","title":"Parameters"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder-impl/get-layout-res/","text":"presentation / cz.eman.kaal.presentation.adapter.binder / ItemBinderImpl / getLayoutRes getLayoutRes \u00b6 open fun getLayoutRes(itemModel: T): Int Actual value that will be set into the variable in the view. Sets it into specified variable defined using getBindingVariable function. Parameters \u00b6 itemModel - Model of item Return Layout resource ID which represents view for itemModel","title":"Get layout res"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder-impl/get-layout-res/#getlayoutres","text":"open fun getLayoutRes(itemModel: T): Int Actual value that will be set into the variable in the view. Sets it into specified variable defined using getBindingVariable function.","title":"getLayoutRes"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-item-binder-impl/get-layout-res/#parameters","text":"itemModel - Model of item Return Layout resource ID which represents view for itemModel","title":"Parameters"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder/","text":"presentation / cz.eman.kaal.presentation.adapter.binder / VariableBinder VariableBinder \u00b6 interface VariableBinder<in T : Any > The interface declares methods for binding variable to item view. Use this if you want to bind custom variable into item view. Most common variable being binded is view model. Parameters \u00b6 T - Type of binding item model Author eMan s.r.o. Since 0.8.0 Functions \u00b6 Name Summary getVariableId Gets the variable id representing variable in view. For example it can be BR.viewModel. abstract fun getVariableId(itemModel: T): Int getVariableValue Actual value that will be set into the variable in the view. Sets it into specified variable defined using getVariableId function. abstract fun getVariableValue(itemModel: T): Any ? Inheritors \u00b6 Name Summary VariableBinderImpl The implementation of VariableBinder data class VariableBinderImpl<in T : Any > : VariableBinder <T>","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder/#variablebinder","text":"interface VariableBinder<in T : Any > The interface declares methods for binding variable to item view. Use this if you want to bind custom variable into item view. Most common variable being binded is view model.","title":"VariableBinder"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder/#parameters","text":"T - Type of binding item model Author eMan s.r.o. Since 0.8.0","title":"Parameters"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder/#functions","text":"Name Summary getVariableId Gets the variable id representing variable in view. For example it can be BR.viewModel. abstract fun getVariableId(itemModel: T): Int getVariableValue Actual value that will be set into the variable in the view. Sets it into specified variable defined using getVariableId function. abstract fun getVariableValue(itemModel: T): Any ?","title":"Functions"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder/#inheritors","text":"Name Summary VariableBinderImpl The implementation of VariableBinder data class VariableBinderImpl<in T : Any > : VariableBinder <T>","title":"Inheritors"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder/get-variable-id/","text":"presentation / cz.eman.kaal.presentation.adapter.binder / VariableBinder / getVariableId getVariableId \u00b6 abstract fun getVariableId(itemModel: T): Int Gets the variable id representing variable in view. For example it can be BR.viewModel. Parameters \u00b6 itemModel - Model of item Return Integer which represents variable in binding layout","title":"Get variable id"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder/get-variable-id/#getvariableid","text":"abstract fun getVariableId(itemModel: T): Int Gets the variable id representing variable in view. For example it can be BR.viewModel.","title":"getVariableId"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder/get-variable-id/#parameters","text":"itemModel - Model of item Return Integer which represents variable in binding layout","title":"Parameters"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder/get-variable-value/","text":"presentation / cz.eman.kaal.presentation.adapter.binder / VariableBinder / getVariableValue getVariableValue \u00b6 abstract fun getVariableValue(itemModel: T): Any ? Actual value that will be set into the variable in the view. Sets it into specified variable defined using getVariableId function. Parameters \u00b6 itemModel - Model of item Return Value of binding variable","title":"Get variable value"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder/get-variable-value/#getvariablevalue","text":"abstract fun getVariableValue(itemModel: T): Any ? Actual value that will be set into the variable in the view. Sets it into specified variable defined using getVariableId function.","title":"getVariableValue"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder/get-variable-value/#parameters","text":"itemModel - Model of item Return Value of binding variable","title":"Parameters"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder-impl/","text":"presentation / cz.eman.kaal.presentation.adapter.binder / VariableBinderImpl VariableBinderImpl \u00b6 data class VariableBinderImpl<in T : Any > : VariableBinder <T> The implementation of VariableBinder Author eMan s.r.o. Since 0.8.0 Constructors \u00b6 Name Summary <init> The implementation of VariableBinder VariableBinderImpl(id: Int , value: Any ?) Functions \u00b6 Name Summary getVariableId Gets the variable id representing variable in view. For example it can be BR.viewModel. fun getVariableId(itemModel: T): Int getVariableValue Actual value that will be set into the variable in the view. Sets it into specified variable defined using getVariableId function. fun getVariableValue(itemModel: T): Any ?","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder-impl/#variablebinderimpl","text":"data class VariableBinderImpl<in T : Any > : VariableBinder <T> The implementation of VariableBinder Author eMan s.r.o. Since 0.8.0","title":"VariableBinderImpl"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder-impl/#constructors","text":"Name Summary <init> The implementation of VariableBinder VariableBinderImpl(id: Int , value: Any ?)","title":"Constructors"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder-impl/#functions","text":"Name Summary getVariableId Gets the variable id representing variable in view. For example it can be BR.viewModel. fun getVariableId(itemModel: T): Int getVariableValue Actual value that will be set into the variable in the view. Sets it into specified variable defined using getVariableId function. fun getVariableValue(itemModel: T): Any ?","title":"Functions"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder-impl/-init-/","text":"presentation / cz.eman.kaal.presentation.adapter.binder / VariableBinderImpl / <init> <init> \u00b6 VariableBinderImpl(id: Int , value: Any ?) The implementation of VariableBinder Author eMan s.r.o. Since 0.8.0","title":" init "},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder-impl/-init-/#init","text":"VariableBinderImpl(id: Int , value: Any ?) The implementation of VariableBinder Author eMan s.r.o. Since 0.8.0","title":"&lt;init&gt;"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder-impl/get-variable-id/","text":"presentation / cz.eman.kaal.presentation.adapter.binder / VariableBinderImpl / getVariableId getVariableId \u00b6 fun getVariableId(itemModel: T): Int Gets the variable id representing variable in view. For example it can be BR.viewModel. Parameters \u00b6 itemModel - Model of item Return Integer which represents variable in binding layout","title":"Get variable id"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder-impl/get-variable-id/#getvariableid","text":"fun getVariableId(itemModel: T): Int Gets the variable id representing variable in view. For example it can be BR.viewModel.","title":"getVariableId"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder-impl/get-variable-id/#parameters","text":"itemModel - Model of item Return Integer which represents variable in binding layout","title":"Parameters"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder-impl/get-variable-value/","text":"presentation / cz.eman.kaal.presentation.adapter.binder / VariableBinderImpl / getVariableValue getVariableValue \u00b6 fun getVariableValue(itemModel: T): Any ? Actual value that will be set into the variable in the view. Sets it into specified variable defined using getVariableId function. Parameters \u00b6 itemModel - Model of item Return Value of binding variable","title":"Get variable value"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder-impl/get-variable-value/#getvariablevalue","text":"fun getVariableValue(itemModel: T): Any ? Actual value that will be set into the variable in the view. Sets it into specified variable defined using getVariableId function.","title":"getVariableValue"},{"location":"api/presentation/cz.eman.kaal.presentation.adapter.binder/-variable-binder-impl/get-variable-value/#parameters","text":"itemModel - Model of item Return Value of binding variable","title":"Parameters"},{"location":"api/presentation/cz.eman.kaal.presentation.dialog/","text":"presentation / cz.eman.kaal.presentation.dialog Package cz.eman.kaal.presentation.dialog \u00b6 Types \u00b6 Name Summary KaalDialogFragment abstract class KaalDialogFragment : DialogFragment","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.dialog/#package-czemankaalpresentationdialog","text":"","title":"Package cz.eman.kaal.presentation.dialog"},{"location":"api/presentation/cz.eman.kaal.presentation.dialog/#types","text":"Name Summary KaalDialogFragment abstract class KaalDialogFragment : DialogFragment","title":"Types"},{"location":"api/presentation/cz.eman.kaal.presentation.dialog/-kaal-dialog-fragment/","text":"presentation / cz.eman.kaal.presentation.dialog / KaalDialogFragment KaalDialogFragment \u00b6 abstract class KaalDialogFragment : DialogFragment Author eMan s.r.o. See Also DialogFragment Since 0.1.0 Constructors \u00b6 Name Summary <init> KaalDialogFragment() Extension Functions \u00b6 Name Summary withArgs An extension function to put arguments ( Bundle ) to your Fragment . fun <T : Fragment> T.withArgs(argsBuilder: Bundle .() -> Unit ): T","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.dialog/-kaal-dialog-fragment/#kaaldialogfragment","text":"abstract class KaalDialogFragment : DialogFragment Author eMan s.r.o. See Also DialogFragment Since 0.1.0","title":"KaalDialogFragment"},{"location":"api/presentation/cz.eman.kaal.presentation.dialog/-kaal-dialog-fragment/#constructors","text":"Name Summary <init> KaalDialogFragment()","title":"Constructors"},{"location":"api/presentation/cz.eman.kaal.presentation.dialog/-kaal-dialog-fragment/#extension-functions","text":"Name Summary withArgs An extension function to put arguments ( Bundle ) to your Fragment . fun <T : Fragment> T.withArgs(argsBuilder: Bundle .() -> Unit ): T","title":"Extension Functions"},{"location":"api/presentation/cz.eman.kaal.presentation.dialog/-kaal-dialog-fragment/-init-/","text":"presentation / cz.eman.kaal.presentation.dialog / KaalDialogFragment / <init> <init> \u00b6 KaalDialogFragment() Author eMan s.r.o. See Also DialogFragment Since 0.1.0","title":" init "},{"location":"api/presentation/cz.eman.kaal.presentation.dialog/-kaal-dialog-fragment/-init-/#init","text":"KaalDialogFragment() Author eMan s.r.o. See Also DialogFragment Since 0.1.0","title":"&lt;init&gt;"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment/","text":"presentation / cz.eman.kaal.presentation.fragment Package cz.eman.kaal.presentation.fragment \u00b6 Types \u00b6 Name Summary KaalFragment abstract class KaalFragment : Fragment Extensions for External Classes \u00b6 Name Summary androidx.fragment.app.Fragment Functions \u00b6 Name Summary argument fun <T : Any > argument(): FragmentPropertyDelegate <T> withArgs An extension function to put arguments ( Bundle ) to your Fragment . fun <T : Fragment> T.withArgs(argsBuilder: Bundle .() -> Unit ): T","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment/#package-czemankaalpresentationfragment","text":"","title":"Package cz.eman.kaal.presentation.fragment"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment/#types","text":"Name Summary KaalFragment abstract class KaalFragment : Fragment","title":"Types"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment/#extensions-for-external-classes","text":"Name Summary androidx.fragment.app.Fragment","title":"Extensions for External Classes"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment/#functions","text":"Name Summary argument fun <T : Any > argument(): FragmentPropertyDelegate <T> withArgs An extension function to put arguments ( Bundle ) to your Fragment . fun <T : Fragment> T.withArgs(argsBuilder: Bundle .() -> Unit ): T","title":"Functions"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment/argument/","text":"presentation / cz.eman.kaal.presentation.fragment / argument argument \u00b6 fun <T : Any > argument(): FragmentPropertyDelegate <T> Since 0.2.0","title":"Argument"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment/argument/#argument","text":"fun <T : Any > argument(): FragmentPropertyDelegate <T> Since 0.2.0","title":"argument"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment/with-args/","text":"presentation / cz.eman.kaal.presentation.fragment / withArgs withArgs \u00b6 inline fun <T : Fragment> T.withArgs(argsBuilder: Bundle .() -> Unit ): T An extension function to put arguments ( Bundle ) to your Fragment . Since 0.2.0","title":"With args"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment/with-args/#withargs","text":"inline fun <T : Fragment> T.withArgs(argsBuilder: Bundle .() -> Unit ): T An extension function to put arguments ( Bundle ) to your Fragment . Since 0.2.0","title":"withArgs"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment/-kaal-fragment/","text":"presentation / cz.eman.kaal.presentation.fragment / KaalFragment KaalFragment \u00b6 abstract class KaalFragment : Fragment Author eMan s.r.o. See Also Fragment Since 0.1.0 Constructors \u00b6 Name Summary <init> KaalFragment(contentLayoutId: Int = 0) Extension Functions \u00b6 Name Summary withArgs An extension function to put arguments ( Bundle ) to your Fragment . fun <T : Fragment> T.withArgs(argsBuilder: Bundle .() -> Unit ): T","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment/-kaal-fragment/#kaalfragment","text":"abstract class KaalFragment : Fragment Author eMan s.r.o. See Also Fragment Since 0.1.0","title":"KaalFragment"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment/-kaal-fragment/#constructors","text":"Name Summary <init> KaalFragment(contentLayoutId: Int = 0)","title":"Constructors"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment/-kaal-fragment/#extension-functions","text":"Name Summary withArgs An extension function to put arguments ( Bundle ) to your Fragment . fun <T : Fragment> T.withArgs(argsBuilder: Bundle .() -> Unit ): T","title":"Extension Functions"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment/-kaal-fragment/-init-/","text":"presentation / cz.eman.kaal.presentation.fragment / KaalFragment / <init> <init> \u00b6 KaalFragment(@LayoutRes contentLayoutId: Int = 0) Author eMan s.r.o. See Also Fragment Since 0.1.0","title":" init "},{"location":"api/presentation/cz.eman.kaal.presentation.fragment/-kaal-fragment/-init-/#init","text":"KaalFragment(@LayoutRes contentLayoutId: Int = 0) Author eMan s.r.o. See Also Fragment Since 0.1.0","title":"&lt;init&gt;"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment/androidx.fragment.app.-fragment/","text":"presentation / cz.eman.kaal.presentation.fragment / androidx.fragment.app.Fragment Extensions for androidx.fragment.app.Fragment \u00b6 Name Summary findOptional fun <T : View > Fragment.findOptional(id: Int ): T?","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment/androidx.fragment.app.-fragment/#extensions-for-androidxfragmentappfragment","text":"Name Summary findOptional fun <T : View > Fragment.findOptional(id: Int ): T?","title":"Extensions for androidx.fragment.app.Fragment"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment/androidx.fragment.app.-fragment/find-optional/","text":"presentation / cz.eman.kaal.presentation.fragment / androidx.fragment.app.Fragment / findOptional findOptional \u00b6 fun <reified T : View > Fragment.findOptional(id: Int ): T? Since 0.2.0","title":"Find optional"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment/androidx.fragment.app.-fragment/find-optional/#findoptional","text":"fun <reified T : View > Fragment.findOptional(id: Int ): T? Since 0.2.0","title":"findOptional"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment.property/","text":"presentation / cz.eman.kaal.presentation.fragment.property Package cz.eman.kaal.presentation.fragment.property \u00b6 Types \u00b6 Name Summary FragmentPropertyDelegate Easier way how to handle fragment's arguments Bundle by using this delegate class FragmentPropertyDelegate<T : Any > : ReadWriteProperty <Fragment, T>","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment.property/#package-czemankaalpresentationfragmentproperty","text":"","title":"Package cz.eman.kaal.presentation.fragment.property"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment.property/#types","text":"Name Summary FragmentPropertyDelegate Easier way how to handle fragment's arguments Bundle by using this delegate class FragmentPropertyDelegate<T : Any > : ReadWriteProperty <Fragment, T>","title":"Types"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment.property/-fragment-property-delegate/","text":"presentation / cz.eman.kaal.presentation.fragment.property / FragmentPropertyDelegate FragmentPropertyDelegate \u00b6 class FragmentPropertyDelegate<T : Any > : ReadWriteProperty <Fragment, T> Easier way how to handle fragment's arguments Bundle by using this delegate Inspired by Adam Powell and his talk on Google I/O 2017. Author vsouhrada (vaclav.souhrada@eman.cz) See Also kotlin.properties.ReadWriteProperty Fragment Since 0.2.0 Constructors \u00b6 Name Summary <init> Easier way how to handle fragment's arguments Bundle by using this delegate FragmentPropertyDelegate() Functions \u00b6 Name Summary getValue operator fun getValue(thisRef: Fragment, property: KProperty <*>): T setValue operator fun setValue(thisRef: Fragment, property: KProperty <*>, value: T): Unit","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment.property/-fragment-property-delegate/#fragmentpropertydelegate","text":"class FragmentPropertyDelegate<T : Any > : ReadWriteProperty <Fragment, T> Easier way how to handle fragment's arguments Bundle by using this delegate Inspired by Adam Powell and his talk on Google I/O 2017. Author vsouhrada (vaclav.souhrada@eman.cz) See Also kotlin.properties.ReadWriteProperty Fragment Since 0.2.0","title":"FragmentPropertyDelegate"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment.property/-fragment-property-delegate/#constructors","text":"Name Summary <init> Easier way how to handle fragment's arguments Bundle by using this delegate FragmentPropertyDelegate()","title":"Constructors"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment.property/-fragment-property-delegate/#functions","text":"Name Summary getValue operator fun getValue(thisRef: Fragment, property: KProperty <*>): T setValue operator fun setValue(thisRef: Fragment, property: KProperty <*>, value: T): Unit","title":"Functions"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment.property/-fragment-property-delegate/-init-/","text":"presentation / cz.eman.kaal.presentation.fragment.property / FragmentPropertyDelegate / <init> <init> \u00b6 FragmentPropertyDelegate() Easier way how to handle fragment's arguments Bundle by using this delegate Inspired by Adam Powell and his talk on Google I/O 2017. Author vsouhrada (vaclav.souhrada@eman.cz) See Also kotlin.properties.ReadWriteProperty Fragment Since 0.2.0","title":" init "},{"location":"api/presentation/cz.eman.kaal.presentation.fragment.property/-fragment-property-delegate/-init-/#init","text":"FragmentPropertyDelegate() Easier way how to handle fragment's arguments Bundle by using this delegate Inspired by Adam Powell and his talk on Google I/O 2017. Author vsouhrada (vaclav.souhrada@eman.cz) See Also kotlin.properties.ReadWriteProperty Fragment Since 0.2.0","title":"&lt;init&gt;"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment.property/-fragment-property-delegate/get-value/","text":"presentation / cz.eman.kaal.presentation.fragment.property / FragmentPropertyDelegate / getValue getValue \u00b6 operator fun getValue(thisRef: Fragment, property: KProperty <*>): T","title":"Get value"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment.property/-fragment-property-delegate/get-value/#getvalue","text":"operator fun getValue(thisRef: Fragment, property: KProperty <*>): T","title":"getValue"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment.property/-fragment-property-delegate/set-value/","text":"presentation / cz.eman.kaal.presentation.fragment.property / FragmentPropertyDelegate / setValue setValue \u00b6 operator fun setValue(thisRef: Fragment, property: KProperty <*>, value: T): Unit","title":"Set value"},{"location":"api/presentation/cz.eman.kaal.presentation.fragment.property/-fragment-property-delegate/set-value/#setvalue","text":"operator fun setValue(thisRef: Fragment, property: KProperty <*>, value: T): Unit","title":"setValue"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle/","text":"presentation / cz.eman.kaal.presentation.lifecycle Package cz.eman.kaal.presentation.lifecycle \u00b6 Types \u00b6 Name Summary SingleLiveEvent A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages. class SingleLiveEvent<T> : MutableLiveData<T>","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle/#package-czemankaalpresentationlifecycle","text":"","title":"Package cz.eman.kaal.presentation.lifecycle"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle/#types","text":"Name Summary SingleLiveEvent A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages. class SingleLiveEvent<T> : MutableLiveData<T>","title":"Types"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/","text":"presentation / cz.eman.kaal.presentation.lifecycle / SingleLiveEvent SingleLiveEvent \u00b6 class SingleLiveEvent<T> : MutableLiveData<T> A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages. This avoids a common problem with events: on configuration change (like rotation) an update can be emitted if the observer is active. This LiveData only calls the observable if there's an explicit call to setValue() or call(). Note that only one observer is going to be notified of changes. Based on the Google Sample Architecture app Since 0.6.0 Constructors \u00b6 Name Summary <init> A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages. SingleLiveEvent() Functions \u00b6 Name Summary call Used for cases where T is Void, to make calls cleaner. fun call(): Unit observe fun observe(owner: LifecycleOwner, observer: Observer<in T>): Unit setValue fun setValue(t: T?): Unit","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/#singleliveevent","text":"class SingleLiveEvent<T> : MutableLiveData<T> A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages. This avoids a common problem with events: on configuration change (like rotation) an update can be emitted if the observer is active. This LiveData only calls the observable if there's an explicit call to setValue() or call(). Note that only one observer is going to be notified of changes. Based on the Google Sample Architecture app Since 0.6.0","title":"SingleLiveEvent"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/#constructors","text":"Name Summary <init> A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages. SingleLiveEvent()","title":"Constructors"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/#functions","text":"Name Summary call Used for cases where T is Void, to make calls cleaner. fun call(): Unit observe fun observe(owner: LifecycleOwner, observer: Observer<in T>): Unit setValue fun setValue(t: T?): Unit","title":"Functions"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/-init-/","text":"presentation / cz.eman.kaal.presentation.lifecycle / SingleLiveEvent / <init> <init> \u00b6 SingleLiveEvent() A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages. This avoids a common problem with events: on configuration change (like rotation) an update can be emitted if the observer is active. This LiveData only calls the observable if there's an explicit call to setValue() or call(). Note that only one observer is going to be notified of changes. Based on the Google Sample Architecture app Since 0.6.0","title":" init "},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/-init-/#init","text":"SingleLiveEvent() A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages. This avoids a common problem with events: on configuration change (like rotation) an update can be emitted if the observer is active. This LiveData only calls the observable if there's an explicit call to setValue() or call(). Note that only one observer is going to be notified of changes. Based on the Google Sample Architecture app Since 0.6.0","title":"&lt;init&gt;"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/call/","text":"presentation / cz.eman.kaal.presentation.lifecycle / SingleLiveEvent / call call \u00b6 @MainThread fun call(): Unit Used for cases where T is Void, to make calls cleaner.","title":"Call"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/call/#call","text":"@MainThread fun call(): Unit Used for cases where T is Void, to make calls cleaner.","title":"call"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/observe/","text":"presentation / cz.eman.kaal.presentation.lifecycle / SingleLiveEvent / observe observe \u00b6 @MainThread fun observe(owner: LifecycleOwner, observer: Observer<in T>): Unit","title":"Observe"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/observe/#observe","text":"@MainThread fun observe(owner: LifecycleOwner, observer: Observer<in T>): Unit","title":"observe"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/set-value/","text":"presentation / cz.eman.kaal.presentation.lifecycle / SingleLiveEvent / setValue setValue \u00b6 @MainThread fun setValue(t: T?): Unit","title":"Set value"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/set-value/#setvalue","text":"@MainThread fun setValue(t: T?): Unit","title":"setValue"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels Package cz.eman.kaal.presentation.lifecycle.channels \u00b6 Types \u00b6 Name Summary LifecycleEventChannel ReceiveChannel emitting Lifecycle.Event updates class LifecycleEventChannel : LifecycleObserver, ReceiveChannel<Event> Extensions for External Classes \u00b6 Name Summary androidx.lifecycle.LifecycleOwner kotlinx.coroutines.channels.ReceiveChannel Functions \u00b6 Name Summary bothNotNull Inline check that A and B value are not null fun <A, B> bothNotNull(a: A?, b: B?, action: (A, B) -> Unit ): Unit combineLatest Combine two ReceiveChannel and create one ReceiveChannel emitting Pair value of the latest values. fun <A, B> combineLatest(channelA: ReceiveChannel<A>, channelB: ReceiveChannel<B>, scope: CoroutineScope, context: CoroutineContext = Dispatchers.Unconfined, capacity: Int = Channel.UNLIMITED): ReceiveChannel< Pair <A, B>> isActiveLifecycleEvent Check if Lifecycle.Event indicates active state fun isActiveLifecycleEvent(event: Event): Boolean","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/#package-czemankaalpresentationlifecyclechannels","text":"","title":"Package cz.eman.kaal.presentation.lifecycle.channels"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/#types","text":"Name Summary LifecycleEventChannel ReceiveChannel emitting Lifecycle.Event updates class LifecycleEventChannel : LifecycleObserver, ReceiveChannel<Event>","title":"Types"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/#extensions-for-external-classes","text":"Name Summary androidx.lifecycle.LifecycleOwner kotlinx.coroutines.channels.ReceiveChannel","title":"Extensions for External Classes"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/#functions","text":"Name Summary bothNotNull Inline check that A and B value are not null fun <A, B> bothNotNull(a: A?, b: B?, action: (A, B) -> Unit ): Unit combineLatest Combine two ReceiveChannel and create one ReceiveChannel emitting Pair value of the latest values. fun <A, B> combineLatest(channelA: ReceiveChannel<A>, channelB: ReceiveChannel<B>, scope: CoroutineScope, context: CoroutineContext = Dispatchers.Unconfined, capacity: Int = Channel.UNLIMITED): ReceiveChannel< Pair <A, B>> isActiveLifecycleEvent Check if Lifecycle.Event indicates active state fun isActiveLifecycleEvent(event: Event): Boolean","title":"Functions"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/both-not-null/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / bothNotNull bothNotNull \u00b6 inline fun <A, B> bothNotNull(a: A?, b: B?, action: (A, B) -> Unit ): Unit Inline check that A and B value are not null","title":"Both not null"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/both-not-null/#bothnotnull","text":"inline fun <A, B> bothNotNull(a: A?, b: B?, action: (A, B) -> Unit ): Unit Inline check that A and B value are not null","title":"bothNotNull"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/combine-latest/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / combineLatest combineLatest \u00b6 fun <A, B> combineLatest(channelA: ReceiveChannel<A>, channelB: ReceiveChannel<B>, scope: CoroutineScope, context: CoroutineContext = Dispatchers.Unconfined, capacity: Int = Channel.UNLIMITED): ReceiveChannel< Pair <A, B>> Combine two ReceiveChannel and create one ReceiveChannel emitting Pair value of the latest values. Parameters \u00b6 channelA - * ReceiveChannel emitting first value of Pair channelB - * ReceiveChannel emitting second value of Pair scope - * CoroutineScope context - * CoroutineContext capacity - * channel capacity","title":"Combine latest"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/combine-latest/#combinelatest","text":"fun <A, B> combineLatest(channelA: ReceiveChannel<A>, channelB: ReceiveChannel<B>, scope: CoroutineScope, context: CoroutineContext = Dispatchers.Unconfined, capacity: Int = Channel.UNLIMITED): ReceiveChannel< Pair <A, B>> Combine two ReceiveChannel and create one ReceiveChannel emitting Pair value of the latest values.","title":"combineLatest"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/combine-latest/#parameters","text":"channelA - * ReceiveChannel emitting first value of Pair channelB - * ReceiveChannel emitting second value of Pair scope - * CoroutineScope context - * CoroutineContext capacity - * channel capacity","title":"Parameters"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/is-active-lifecycle-event/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / isActiveLifecycleEvent isActiveLifecycleEvent \u00b6 fun isActiveLifecycleEvent(event: Event): Boolean Check if Lifecycle.Event indicates active state Return true when event indicates active state","title":"Is active lifecycle event"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/is-active-lifecycle-event/#isactivelifecycleevent","text":"fun isActiveLifecycleEvent(event: Event): Boolean Check if Lifecycle.Event indicates active state Return true when event indicates active state","title":"isActiveLifecycleEvent"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/-lifecycle-event-channel/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / LifecycleEventChannel LifecycleEventChannel \u00b6 class LifecycleEventChannel : LifecycleObserver, ReceiveChannel<Event> ReceiveChannel emitting Lifecycle.Event updates Constructors \u00b6 Name Summary <init> LifecycleEventChannel(lifecycleOwner: LifecycleOwner, capacity: Int = Channel.RENDEZVOUS, scope: CoroutineScope) Functions \u00b6 Name Summary cancel fun cancel(): Unit onAny fun onAny(source: LifecycleOwner, event: Event): Unit","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/-lifecycle-event-channel/#lifecycleeventchannel","text":"class LifecycleEventChannel : LifecycleObserver, ReceiveChannel<Event> ReceiveChannel emitting Lifecycle.Event updates","title":"LifecycleEventChannel"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/-lifecycle-event-channel/#constructors","text":"Name Summary <init> LifecycleEventChannel(lifecycleOwner: LifecycleOwner, capacity: Int = Channel.RENDEZVOUS, scope: CoroutineScope)","title":"Constructors"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/-lifecycle-event-channel/#functions","text":"Name Summary cancel fun cancel(): Unit onAny fun onAny(source: LifecycleOwner, event: Event): Unit","title":"Functions"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/-lifecycle-event-channel/-init-/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / LifecycleEventChannel / <init> <init> \u00b6 LifecycleEventChannel(lifecycleOwner: LifecycleOwner, capacity: Int = Channel.RENDEZVOUS, scope: CoroutineScope)","title":" init "},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/-lifecycle-event-channel/-init-/#init","text":"LifecycleEventChannel(lifecycleOwner: LifecycleOwner, capacity: Int = Channel.RENDEZVOUS, scope: CoroutineScope)","title":"&lt;init&gt;"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/-lifecycle-event-channel/cancel/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / LifecycleEventChannel / cancel cancel \u00b6 @AnyThread fun cancel(): Unit","title":"Cancel"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/-lifecycle-event-channel/cancel/#cancel","text":"@AnyThread fun cancel(): Unit","title":"cancel"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/-lifecycle-event-channel/on-any/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / LifecycleEventChannel / onAny onAny \u00b6 @MainThread fun onAny(source: LifecycleOwner, event: Event): Unit","title":"On any"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/-lifecycle-event-channel/on-any/#onany","text":"@MainThread fun onAny(source: LifecycleOwner, event: Event): Unit","title":"onAny"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/androidx.lifecycle.-lifecycle-owner/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / androidx.lifecycle.LifecycleOwner Extensions for androidx.lifecycle.LifecycleOwner \u00b6 Name Summary observeData Simple way to start observing data with Lifecycle aware ReceiveChannel suspend fun <T> LifecycleOwner.observeData(channel: ReceiveChannel<T>, body: (T) -> Unit ): Unit","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/androidx.lifecycle.-lifecycle-owner/#extensions-for-androidxlifecyclelifecycleowner","text":"Name Summary observeData Simple way to start observing data with Lifecycle aware ReceiveChannel suspend fun <T> LifecycleOwner.observeData(channel: ReceiveChannel<T>, body: (T) -> Unit ): Unit","title":"Extensions for androidx.lifecycle.LifecycleOwner"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/androidx.lifecycle.-lifecycle-owner/observe-data/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / androidx.lifecycle.LifecycleOwner / observeData observeData \u00b6 suspend fun <T> LifecycleOwner.observeData(channel: ReceiveChannel<T>, body: (T) -> Unit ): Unit Simple way to start observing data with Lifecycle aware ReceiveChannel","title":"Observe data"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/androidx.lifecycle.-lifecycle-owner/observe-data/#observedata","text":"suspend fun <T> LifecycleOwner.observeData(channel: ReceiveChannel<T>, body: (T) -> Unit ): Unit Simple way to start observing data with Lifecycle aware ReceiveChannel","title":"observeData"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/kotlinx.coroutines.channels.-receive-channel/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / kotlinx.coroutines.channels.ReceiveChannel Extensions for kotlinx.coroutines.channels.ReceiveChannel \u00b6 Name Summary withLifecycle Transfer ReceiveChannel to Lifecycle aware ReceiveChannel fun <T> ReceiveChannel<T>.withLifecycle(lifecycleOwner: LifecycleOwner, scope: CoroutineScope, context: CoroutineContext = Unconfined, capacity: Int = Channel.CONFLATED): ReceiveChannel<T>","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/kotlinx.coroutines.channels.-receive-channel/#extensions-for-kotlinxcoroutineschannelsreceivechannel","text":"Name Summary withLifecycle Transfer ReceiveChannel to Lifecycle aware ReceiveChannel fun <T> ReceiveChannel<T>.withLifecycle(lifecycleOwner: LifecycleOwner, scope: CoroutineScope, context: CoroutineContext = Unconfined, capacity: Int = Channel.CONFLATED): ReceiveChannel<T>","title":"Extensions for kotlinx.coroutines.channels.ReceiveChannel"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/kotlinx.coroutines.channels.-receive-channel/with-lifecycle/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / kotlinx.coroutines.channels.ReceiveChannel / withLifecycle withLifecycle \u00b6 fun <T> ReceiveChannel<T>.withLifecycle(lifecycleOwner: LifecycleOwner, scope: CoroutineScope, context: CoroutineContext = Unconfined, capacity: Int = Channel.CONFLATED): ReceiveChannel<T> Transfer ReceiveChannel to Lifecycle aware ReceiveChannel","title":"With lifecycle"},{"location":"api/presentation/cz.eman.kaal.presentation.lifecycle.channels/kotlinx.coroutines.channels.-receive-channel/with-lifecycle/#withlifecycle","text":"fun <T> ReceiveChannel<T>.withLifecycle(lifecycleOwner: LifecycleOwner, scope: CoroutineScope, context: CoroutineContext = Unconfined, capacity: Int = Channel.CONFLATED): ReceiveChannel<T> Transfer ReceiveChannel to Lifecycle aware ReceiveChannel","title":"withLifecycle"},{"location":"api/presentation/cz.eman.kaal.presentation.util/","text":"presentation / cz.eman.kaal.presentation.util Package cz.eman.kaal.presentation.util \u00b6 Types \u00b6 Name Summary DiffCallback Implementation of DiffUtil.Callback using the DiffUtil.ItemCallback to compare items class DiffCallback<in T> : Callback DiffItemCallback Callback for calculating the diff between two non-null items in a list. abstract class DiffItemCallback<T> : ItemCallback<T> Functions \u00b6 Name Summary createDiffer fun <T, ID> createDiffer(idSelector: (T) -> ID): ItemCallback<T>","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.util/#package-czemankaalpresentationutil","text":"","title":"Package cz.eman.kaal.presentation.util"},{"location":"api/presentation/cz.eman.kaal.presentation.util/#types","text":"Name Summary DiffCallback Implementation of DiffUtil.Callback using the DiffUtil.ItemCallback to compare items class DiffCallback<in T> : Callback DiffItemCallback Callback for calculating the diff between two non-null items in a list. abstract class DiffItemCallback<T> : ItemCallback<T>","title":"Types"},{"location":"api/presentation/cz.eman.kaal.presentation.util/#functions","text":"Name Summary createDiffer fun <T, ID> createDiffer(idSelector: (T) -> ID): ItemCallback<T>","title":"Functions"},{"location":"api/presentation/cz.eman.kaal.presentation.util/create-differ/","text":"presentation / cz.eman.kaal.presentation.util / createDiffer createDiffer \u00b6 inline fun <T, ID> createDiffer(crossinline idSelector: (T) -> ID): ItemCallback<T> Parameters \u00b6 T - Type of items to compare ID - Type of item identifier idSelector - Function for selecting the item identifier Return Instance of the DiffItemCallback See Also DiffItemCallback","title":"Create differ"},{"location":"api/presentation/cz.eman.kaal.presentation.util/create-differ/#creatediffer","text":"inline fun <T, ID> createDiffer(crossinline idSelector: (T) -> ID): ItemCallback<T>","title":"createDiffer"},{"location":"api/presentation/cz.eman.kaal.presentation.util/create-differ/#parameters","text":"T - Type of items to compare ID - Type of item identifier idSelector - Function for selecting the item identifier Return Instance of the DiffItemCallback See Also DiffItemCallback","title":"Parameters"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-callback/","text":"presentation / cz.eman.kaal.presentation.util / DiffCallback DiffCallback \u00b6 class DiffCallback<in T> : Callback Implementation of DiffUtil.Callback using the DiffUtil.ItemCallback to compare items Parameters \u00b6 T - Type of the item oldItems - The list of old items newItems - The list of new items which replace the oldItems differ - The implementation of comparative callback Author eMan a.s. See Also DiffUtil.Callback DiffUtil.ItemCallback Since 0.8.0 Constructors \u00b6 Name Summary <init> Implementation of DiffUtil.Callback using the DiffUtil.ItemCallback to compare items DiffCallback(oldItems: List <T>, newItems: List <T>, differ: ItemCallback<T>) Functions \u00b6 Name Summary areContentsTheSame fun areContentsTheSame(oldItemPosition: Int , newItemPosition: Int ): Boolean areItemsTheSame fun areItemsTheSame(oldItemPosition: Int , newItemPosition: Int ): Boolean getNewListSize fun getNewListSize(): Int getOldListSize fun getOldListSize(): Int","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-callback/#diffcallback","text":"class DiffCallback<in T> : Callback Implementation of DiffUtil.Callback using the DiffUtil.ItemCallback to compare items","title":"DiffCallback"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-callback/#parameters","text":"T - Type of the item oldItems - The list of old items newItems - The list of new items which replace the oldItems differ - The implementation of comparative callback Author eMan a.s. See Also DiffUtil.Callback DiffUtil.ItemCallback Since 0.8.0","title":"Parameters"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-callback/#constructors","text":"Name Summary <init> Implementation of DiffUtil.Callback using the DiffUtil.ItemCallback to compare items DiffCallback(oldItems: List <T>, newItems: List <T>, differ: ItemCallback<T>)","title":"Constructors"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-callback/#functions","text":"Name Summary areContentsTheSame fun areContentsTheSame(oldItemPosition: Int , newItemPosition: Int ): Boolean areItemsTheSame fun areItemsTheSame(oldItemPosition: Int , newItemPosition: Int ): Boolean getNewListSize fun getNewListSize(): Int getOldListSize fun getOldListSize(): Int","title":"Functions"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-callback/-init-/","text":"presentation / cz.eman.kaal.presentation.util / DiffCallback / <init> <init> \u00b6 DiffCallback(oldItems: List <T>, newItems: List <T>, differ: ItemCallback<T>) Implementation of DiffUtil.Callback using the DiffUtil.ItemCallback to compare items Parameters \u00b6 T - Type of the item oldItems - The list of old items newItems - The list of new items which replace the oldItems differ - The implementation of comparative callback Author eMan a.s. See Also DiffUtil.Callback DiffUtil.ItemCallback Since 0.8.0","title":" init "},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-callback/-init-/#init","text":"DiffCallback(oldItems: List <T>, newItems: List <T>, differ: ItemCallback<T>) Implementation of DiffUtil.Callback using the DiffUtil.ItemCallback to compare items","title":"&lt;init&gt;"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-callback/-init-/#parameters","text":"T - Type of the item oldItems - The list of old items newItems - The list of new items which replace the oldItems differ - The implementation of comparative callback Author eMan a.s. See Also DiffUtil.Callback DiffUtil.ItemCallback Since 0.8.0","title":"Parameters"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-callback/are-contents-the-same/","text":"presentation / cz.eman.kaal.presentation.util / DiffCallback / areContentsTheSame areContentsTheSame \u00b6 fun areContentsTheSame(oldItemPosition: Int , newItemPosition: Int ): Boolean","title":"Are contents the same"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-callback/are-contents-the-same/#arecontentsthesame","text":"fun areContentsTheSame(oldItemPosition: Int , newItemPosition: Int ): Boolean","title":"areContentsTheSame"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-callback/are-items-the-same/","text":"presentation / cz.eman.kaal.presentation.util / DiffCallback / areItemsTheSame areItemsTheSame \u00b6 fun areItemsTheSame(oldItemPosition: Int , newItemPosition: Int ): Boolean","title":"Are items the same"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-callback/are-items-the-same/#areitemsthesame","text":"fun areItemsTheSame(oldItemPosition: Int , newItemPosition: Int ): Boolean","title":"areItemsTheSame"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-callback/get-new-list-size/","text":"presentation / cz.eman.kaal.presentation.util / DiffCallback / getNewListSize getNewListSize \u00b6 fun getNewListSize(): Int","title":"Get new list size"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-callback/get-new-list-size/#getnewlistsize","text":"fun getNewListSize(): Int","title":"getNewListSize"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-callback/get-old-list-size/","text":"presentation / cz.eman.kaal.presentation.util / DiffCallback / getOldListSize getOldListSize \u00b6 fun getOldListSize(): Int","title":"Get old list size"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-callback/get-old-list-size/#getoldlistsize","text":"fun getOldListSize(): Int","title":"getOldListSize"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-item-callback/","text":"presentation / cz.eman.kaal.presentation.util / DiffItemCallback DiffItemCallback \u00b6 abstract class DiffItemCallback<T> : ItemCallback<T> Callback for calculating the diff between two non-null items in a list. The DiffUtil.ItemCallback.areContentsTheSame uses the equals method to compare items. This class should by used with data class or class that is overriding equals method. Parameters \u00b6 T - Type of items to compare Author eMan a.s. See Also DiffUtil.ItemCallback Constructors \u00b6 Name Summary <init> Callback for calculating the diff between two non-null items in a list. DiffItemCallback() Functions \u00b6 Name Summary areContentsTheSame fun areContentsTheSame(oldItem: T, newItem: T): Boolean","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-item-callback/#diffitemcallback","text":"abstract class DiffItemCallback<T> : ItemCallback<T> Callback for calculating the diff between two non-null items in a list. The DiffUtil.ItemCallback.areContentsTheSame uses the equals method to compare items. This class should by used with data class or class that is overriding equals method.","title":"DiffItemCallback"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-item-callback/#parameters","text":"T - Type of items to compare Author eMan a.s. See Also DiffUtil.ItemCallback","title":"Parameters"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-item-callback/#constructors","text":"Name Summary <init> Callback for calculating the diff between two non-null items in a list. DiffItemCallback()","title":"Constructors"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-item-callback/#functions","text":"Name Summary areContentsTheSame fun areContentsTheSame(oldItem: T, newItem: T): Boolean","title":"Functions"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-item-callback/-init-/","text":"presentation / cz.eman.kaal.presentation.util / DiffItemCallback / <init> <init> \u00b6 DiffItemCallback() Callback for calculating the diff between two non-null items in a list. The DiffUtil.ItemCallback.areContentsTheSame uses the equals method to compare items. This class should by used with data class or class that is overriding equals method. Parameters \u00b6 T - Type of items to compare Author eMan a.s. See Also DiffUtil.ItemCallback","title":" init "},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-item-callback/-init-/#init","text":"DiffItemCallback() Callback for calculating the diff between two non-null items in a list. The DiffUtil.ItemCallback.areContentsTheSame uses the equals method to compare items. This class should by used with data class or class that is overriding equals method.","title":"&lt;init&gt;"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-item-callback/-init-/#parameters","text":"T - Type of items to compare Author eMan a.s. See Also DiffUtil.ItemCallback","title":"Parameters"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-item-callback/are-contents-the-same/","text":"presentation / cz.eman.kaal.presentation.util / DiffItemCallback / areContentsTheSame areContentsTheSame \u00b6 fun areContentsTheSame(oldItem: T, newItem: T): Boolean","title":"Are contents the same"},{"location":"api/presentation/cz.eman.kaal.presentation.util/-diff-item-callback/are-contents-the-same/#arecontentsthesame","text":"fun areContentsTheSame(oldItem: T, newItem: T): Boolean","title":"areContentsTheSame"},{"location":"api/presentation/cz.eman.kaal.presentation.view/","text":"presentation / cz.eman.kaal.presentation.view Package cz.eman.kaal.presentation.view \u00b6 Types \u00b6 Name Summary DslTextWatcher A DSL wrapper around the TextWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on. class DslTextWatcher : TextWatcher Extensions for External Classes \u00b6 Name Summary android.view.View android.view.ViewGroup android.widget.TextView","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.view/#package-czemankaalpresentationview","text":"","title":"Package cz.eman.kaal.presentation.view"},{"location":"api/presentation/cz.eman.kaal.presentation.view/#types","text":"Name Summary DslTextWatcher A DSL wrapper around the TextWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on. class DslTextWatcher : TextWatcher","title":"Types"},{"location":"api/presentation/cz.eman.kaal.presentation.view/#extensions-for-external-classes","text":"Name Summary android.view.View android.view.ViewGroup android.widget.TextView","title":"Extensions for External Classes"},{"location":"api/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/","text":"presentation / cz.eman.kaal.presentation.view / DslTextWatcher DslTextWatcher \u00b6 class DslTextWatcher : TextWatcher A DSL wrapper around the TextWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on. Since 0.3.0 See Also TextWatcher Constructors \u00b6 Name Summary <init> A DSL wrapper around the TextWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on. DslTextWatcher() Properties \u00b6 Name Summary isBlank val TextView .isBlank: Boolean isEmpty val TextView .isEmpty: Boolean isNotBlank val TextView .isNotBlank: Boolean isNotEmpty val TextView .isNotEmpty: Boolean Functions \u00b6 Name Summary afterTextChanged fun afterTextChanged(s: Editable ?): Unit fun afterTextChanged(listener: ( Editable ?) -> Unit ): Unit beforeTextChanged fun beforeTextChanged(s: CharSequence ?, start: Int , count: Int , after: Int ): Unit fun beforeTextChanged(listener: ( CharSequence ?, Int , Int , Int ) -> Unit ): Unit onTextChanged fun onTextChanged(s: CharSequence ?, start: Int , before: Int , count: Int ): Unit fun onTextChanged(listener: ( CharSequence ?, Int , Int , Int ) -> Unit ): Unit","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/#dsltextwatcher","text":"class DslTextWatcher : TextWatcher A DSL wrapper around the TextWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on. Since 0.3.0 See Also TextWatcher","title":"DslTextWatcher"},{"location":"api/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/#constructors","text":"Name Summary <init> A DSL wrapper around the TextWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on. DslTextWatcher()","title":"Constructors"},{"location":"api/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/#properties","text":"Name Summary isBlank val TextView .isBlank: Boolean isEmpty val TextView .isEmpty: Boolean isNotBlank val TextView .isNotBlank: Boolean isNotEmpty val TextView .isNotEmpty: Boolean","title":"Properties"},{"location":"api/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/#functions","text":"Name Summary afterTextChanged fun afterTextChanged(s: Editable ?): Unit fun afterTextChanged(listener: ( Editable ?) -> Unit ): Unit beforeTextChanged fun beforeTextChanged(s: CharSequence ?, start: Int , count: Int , after: Int ): Unit fun beforeTextChanged(listener: ( CharSequence ?, Int , Int , Int ) -> Unit ): Unit onTextChanged fun onTextChanged(s: CharSequence ?, start: Int , before: Int , count: Int ): Unit fun onTextChanged(listener: ( CharSequence ?, Int , Int , Int ) -> Unit ): Unit","title":"Functions"},{"location":"api/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/-init-/","text":"presentation / cz.eman.kaal.presentation.view / DslTextWatcher / <init> <init> \u00b6 DslTextWatcher() A DSL wrapper around the TextWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on. Since 0.3.0 See Also TextWatcher","title":" init "},{"location":"api/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/-init-/#init","text":"DslTextWatcher() A DSL wrapper around the TextWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on. Since 0.3.0 See Also TextWatcher","title":"&lt;init&gt;"},{"location":"api/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/after-text-changed/","text":"presentation / cz.eman.kaal.presentation.view / DslTextWatcher / afterTextChanged afterTextChanged \u00b6 fun afterTextChanged(s: Editable ?): Unit fun afterTextChanged(listener: ( Editable ?) -> Unit ): Unit","title":"After text changed"},{"location":"api/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/after-text-changed/#aftertextchanged","text":"fun afterTextChanged(s: Editable ?): Unit fun afterTextChanged(listener: ( Editable ?) -> Unit ): Unit","title":"afterTextChanged"},{"location":"api/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/before-text-changed/","text":"presentation / cz.eman.kaal.presentation.view / DslTextWatcher / beforeTextChanged beforeTextChanged \u00b6 fun beforeTextChanged(s: CharSequence ?, start: Int , count: Int , after: Int ): Unit fun beforeTextChanged(listener: ( CharSequence ?, Int , Int , Int ) -> Unit ): Unit","title":"Before text changed"},{"location":"api/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/before-text-changed/#beforetextchanged","text":"fun beforeTextChanged(s: CharSequence ?, start: Int , count: Int , after: Int ): Unit fun beforeTextChanged(listener: ( CharSequence ?, Int , Int , Int ) -> Unit ): Unit","title":"beforeTextChanged"},{"location":"api/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/is-blank/","text":"presentation / cz.eman.kaal.presentation.view / DslTextWatcher / isBlank isBlank \u00b6 val TextView .isBlank: Boolean","title":"Is blank"},{"location":"api/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/is-blank/#isblank","text":"val TextView .isBlank: Boolean","title":"isBlank"},{"location":"api/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/is-empty/","text":"presentation / cz.eman.kaal.presentation.view / DslTextWatcher / isEmpty isEmpty \u00b6 val TextView .isEmpty: Boolean","title":"Is empty"},{"location":"api/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/is-empty/#isempty","text":"val TextView .isEmpty: Boolean","title":"isEmpty"},{"location":"api/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/is-not-blank/","text":"presentation / cz.eman.kaal.presentation.view / DslTextWatcher / isNotBlank isNotBlank \u00b6 val TextView .isNotBlank: Boolean","title":"Is not blank"},{"location":"api/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/is-not-blank/#isnotblank","text":"val TextView .isNotBlank: Boolean","title":"isNotBlank"},{"location":"api/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/is-not-empty/","text":"presentation / cz.eman.kaal.presentation.view / DslTextWatcher / isNotEmpty isNotEmpty \u00b6 val TextView .isNotEmpty: Boolean","title":"Is not empty"},{"location":"api/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/is-not-empty/#isnotempty","text":"val TextView .isNotEmpty: Boolean","title":"isNotEmpty"},{"location":"api/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/on-text-changed/","text":"presentation / cz.eman.kaal.presentation.view / DslTextWatcher / onTextChanged onTextChanged \u00b6 fun onTextChanged(s: CharSequence ?, start: Int , before: Int , count: Int ): Unit fun onTextChanged(listener: ( CharSequence ?, Int , Int , Int ) -> Unit ): Unit","title":"On text changed"},{"location":"api/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/on-text-changed/#ontextchanged","text":"fun onTextChanged(s: CharSequence ?, start: Int , before: Int , count: Int ): Unit fun onTextChanged(listener: ( CharSequence ?, Int , Int , Int ) -> Unit ): Unit","title":"onTextChanged"},{"location":"api/presentation/cz.eman.kaal.presentation.view/android.view.-view/","text":"presentation / cz.eman.kaal.presentation.view / android.view.View Extensions for android.view.View \u00b6 Name Summary hide By calling this function you can make your view component View.GONE . fun View .hide(): Unit hideKeyboard Hide a keyboard from current view. fun View .hideKeyboard(): Unit invisible By calling this function you can make your view component invisible ( View.INVISIBLE ) fun View .invisible(): Unit show By calling this function you can make your view component visible ( View.VISIBLE ) fun View .show(): Unit","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.view/android.view.-view/#extensions-for-androidviewview","text":"Name Summary hide By calling this function you can make your view component View.GONE . fun View .hide(): Unit hideKeyboard Hide a keyboard from current view. fun View .hideKeyboard(): Unit invisible By calling this function you can make your view component invisible ( View.INVISIBLE ) fun View .invisible(): Unit show By calling this function you can make your view component visible ( View.VISIBLE ) fun View .show(): Unit","title":"Extensions for android.view.View"},{"location":"api/presentation/cz.eman.kaal.presentation.view/android.view.-view/hide-keyboard/","text":"presentation / cz.eman.kaal.presentation.view / android.view.View / hideKeyboard hideKeyboard \u00b6 fun View .hideKeyboard(): Unit Hide a keyboard from current view. Since 0.3.0","title":"Hide keyboard"},{"location":"api/presentation/cz.eman.kaal.presentation.view/android.view.-view/hide-keyboard/#hidekeyboard","text":"fun View .hideKeyboard(): Unit Hide a keyboard from current view. Since 0.3.0","title":"hideKeyboard"},{"location":"api/presentation/cz.eman.kaal.presentation.view/android.view.-view/hide/","text":"presentation / cz.eman.kaal.presentation.view / android.view.View / hide hide \u00b6 fun View .hide(): Unit By calling this function you can make your view component View.GONE . Since 0.3.0","title":"Hide"},{"location":"api/presentation/cz.eman.kaal.presentation.view/android.view.-view/hide/#hide","text":"fun View .hide(): Unit By calling this function you can make your view component View.GONE . Since 0.3.0","title":"hide"},{"location":"api/presentation/cz.eman.kaal.presentation.view/android.view.-view/invisible/","text":"presentation / cz.eman.kaal.presentation.view / android.view.View / invisible invisible \u00b6 fun View .invisible(): Unit By calling this function you can make your view component invisible ( View.INVISIBLE ) Since 0.3.0","title":"Invisible"},{"location":"api/presentation/cz.eman.kaal.presentation.view/android.view.-view/invisible/#invisible","text":"fun View .invisible(): Unit By calling this function you can make your view component invisible ( View.INVISIBLE ) Since 0.3.0","title":"invisible"},{"location":"api/presentation/cz.eman.kaal.presentation.view/android.view.-view/show/","text":"presentation / cz.eman.kaal.presentation.view / android.view.View / show show \u00b6 fun View .show(): Unit By calling this function you can make your view component visible ( View.VISIBLE ) Since 0.3.0","title":"Show"},{"location":"api/presentation/cz.eman.kaal.presentation.view/android.view.-view/show/#show","text":"fun View .show(): Unit By calling this function you can make your view component visible ( View.VISIBLE ) Since 0.3.0","title":"show"},{"location":"api/presentation/cz.eman.kaal.presentation.view/android.view.-view-group/","text":"presentation / cz.eman.kaal.presentation.view / android.view.ViewGroup Extensions for android.view.ViewGroup \u00b6 Name Summary inflate Allows calls like: fun ViewGroup .inflate(layout: Int , attachToRoot: Boolean = false): View","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.view/android.view.-view-group/#extensions-for-androidviewviewgroup","text":"Name Summary inflate Allows calls like: fun ViewGroup .inflate(layout: Int , attachToRoot: Boolean = false): View","title":"Extensions for android.view.ViewGroup"},{"location":"api/presentation/cz.eman.kaal.presentation.view/android.view.-view-group/inflate/","text":"presentation / cz.eman.kaal.presentation.view / android.view.ViewGroup / inflate inflate \u00b6 fun ViewGroup .inflate(@LayoutRes layout: Int , attachToRoot: Boolean = false): View Allows calls like: viewGroup.inflate(R.layout.exchange_rates_view) Since 0.6.0","title":"Inflate"},{"location":"api/presentation/cz.eman.kaal.presentation.view/android.view.-view-group/inflate/#inflate","text":"fun ViewGroup .inflate(@LayoutRes layout: Int , attachToRoot: Boolean = false): View Allows calls like: viewGroup.inflate(R.layout.exchange_rates_view) Since 0.6.0","title":"inflate"},{"location":"api/presentation/cz.eman.kaal.presentation.view/android.widget.-text-view/","text":"presentation / cz.eman.kaal.presentation.view / android.widget.TextView Extensions for android.widget.TextView \u00b6 Name Summary textWatcher fun TextView .textWatcher(init: DslTextWatcher .() -> Unit ): Unit","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.view/android.widget.-text-view/#extensions-for-androidwidgettextview","text":"Name Summary textWatcher fun TextView .textWatcher(init: DslTextWatcher .() -> Unit ): Unit","title":"Extensions for android.widget.TextView"},{"location":"api/presentation/cz.eman.kaal.presentation.view/android.widget.-text-view/text-watcher/","text":"presentation / cz.eman.kaal.presentation.view / android.widget.TextView / textWatcher textWatcher \u00b6 inline fun TextView .textWatcher(init: DslTextWatcher .() -> Unit ): Unit Since 0.3.0","title":"Text watcher"},{"location":"api/presentation/cz.eman.kaal.presentation.view/android.widget.-text-view/text-watcher/#textwatcher","text":"inline fun TextView .textWatcher(init: DslTextWatcher .() -> Unit ): Unit Since 0.3.0","title":"textWatcher"},{"location":"api/presentation/cz.eman.kaal.presentation.viewmodel/","text":"presentation / cz.eman.kaal.presentation.viewmodel Package cz.eman.kaal.presentation.viewmodel \u00b6 Types \u00b6 Name Summary KaalAndroidViewModel abstract class KaalAndroidViewModel : AndroidViewModel, KoinComponent KaalViewModel abstract class KaalViewModel : ViewModel, KoinComponent Extensions for External Classes \u00b6 Name Summary androidx.lifecycle.ViewModel","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.viewmodel/#package-czemankaalpresentationviewmodel","text":"","title":"Package cz.eman.kaal.presentation.viewmodel"},{"location":"api/presentation/cz.eman.kaal.presentation.viewmodel/#types","text":"Name Summary KaalAndroidViewModel abstract class KaalAndroidViewModel : AndroidViewModel, KoinComponent KaalViewModel abstract class KaalViewModel : ViewModel, KoinComponent","title":"Types"},{"location":"api/presentation/cz.eman.kaal.presentation.viewmodel/#extensions-for-external-classes","text":"Name Summary androidx.lifecycle.ViewModel","title":"Extensions for External Classes"},{"location":"api/presentation/cz.eman.kaal.presentation.viewmodel/-kaal-android-view-model/","text":"presentation / cz.eman.kaal.presentation.viewmodel / KaalAndroidViewModel KaalAndroidViewModel \u00b6 abstract class KaalAndroidViewModel : AndroidViewModel, KoinComponent Author eMan s.r.o (info@eman.cz) See Also AndroidViewModel KoinComponent Constructors \u00b6 Name Summary <init> KaalAndroidViewModel(application: Application )","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.viewmodel/-kaal-android-view-model/#kaalandroidviewmodel","text":"abstract class KaalAndroidViewModel : AndroidViewModel, KoinComponent Author eMan s.r.o (info@eman.cz) See Also AndroidViewModel KoinComponent","title":"KaalAndroidViewModel"},{"location":"api/presentation/cz.eman.kaal.presentation.viewmodel/-kaal-android-view-model/#constructors","text":"Name Summary <init> KaalAndroidViewModel(application: Application )","title":"Constructors"},{"location":"api/presentation/cz.eman.kaal.presentation.viewmodel/-kaal-android-view-model/-init-/","text":"presentation / cz.eman.kaal.presentation.viewmodel / KaalAndroidViewModel / <init> <init> \u00b6 KaalAndroidViewModel(application: Application ) Author eMan s.r.o (info@eman.cz) See Also AndroidViewModel KoinComponent","title":" init "},{"location":"api/presentation/cz.eman.kaal.presentation.viewmodel/-kaal-android-view-model/-init-/#init","text":"KaalAndroidViewModel(application: Application ) Author eMan s.r.o (info@eman.cz) See Also AndroidViewModel KoinComponent","title":"&lt;init&gt;"},{"location":"api/presentation/cz.eman.kaal.presentation.viewmodel/-kaal-view-model/","text":"presentation / cz.eman.kaal.presentation.viewmodel / KaalViewModel KaalViewModel \u00b6 abstract class KaalViewModel : ViewModel, KoinComponent Author eMan s.r.o (info@eman.cz) See Also ViewModel KoinComponent Constructors \u00b6 Name Summary <init> KaalViewModel()","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.viewmodel/-kaal-view-model/#kaalviewmodel","text":"abstract class KaalViewModel : ViewModel, KoinComponent Author eMan s.r.o (info@eman.cz) See Also ViewModel KoinComponent","title":"KaalViewModel"},{"location":"api/presentation/cz.eman.kaal.presentation.viewmodel/-kaal-view-model/#constructors","text":"Name Summary <init> KaalViewModel()","title":"Constructors"},{"location":"api/presentation/cz.eman.kaal.presentation.viewmodel/-kaal-view-model/-init-/","text":"presentation / cz.eman.kaal.presentation.viewmodel / KaalViewModel / <init> <init> \u00b6 KaalViewModel() Author eMan s.r.o (info@eman.cz) See Also ViewModel KoinComponent","title":" init "},{"location":"api/presentation/cz.eman.kaal.presentation.viewmodel/-kaal-view-model/-init-/#init","text":"KaalViewModel() Author eMan s.r.o (info@eman.cz) See Also ViewModel KoinComponent","title":"&lt;init&gt;"},{"location":"api/presentation/cz.eman.kaal.presentation.viewmodel/androidx.lifecycle.-view-model/","text":"presentation / cz.eman.kaal.presentation.viewmodel / androidx.lifecycle.ViewModel Extensions for androidx.lifecycle.ViewModel \u00b6 Name Summary launch Extension enabling to launch Coroutine on viewModelScope without writing the viewModelScope part. For more information check the original function CoroutineScope.launch . fun ViewModel.launch(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> Unit ): Job","title":"Index"},{"location":"api/presentation/cz.eman.kaal.presentation.viewmodel/androidx.lifecycle.-view-model/#extensions-for-androidxlifecycleviewmodel","text":"Name Summary launch Extension enabling to launch Coroutine on viewModelScope without writing the viewModelScope part. For more information check the original function CoroutineScope.launch . fun ViewModel.launch(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> Unit ): Job","title":"Extensions for androidx.lifecycle.ViewModel"},{"location":"api/presentation/cz.eman.kaal.presentation.viewmodel/androidx.lifecycle.-view-model/launch/","text":"presentation / cz.eman.kaal.presentation.viewmodel / androidx.lifecycle.ViewModel / launch launch \u00b6 fun ViewModel.launch(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> Unit ): Job Extension enabling to launch Coroutine on viewModelScope without writing the viewModelScope part. For more information check the original function CoroutineScope.launch . Since 0.8.0","title":"Launch"},{"location":"api/presentation/cz.eman.kaal.presentation.viewmodel/androidx.lifecycle.-view-model/launch/#launch","text":"fun ViewModel.launch(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> Unit ): Job Extension enabling to launch Coroutine on viewModelScope without writing the viewModelScope part. For more information check the original function CoroutineScope.launch . Since 0.8.0","title":"launch"}]}